gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.0 #5416 (Apr 29 2011) (UNIX)
               00004 ; This file was generated Tue Jul 19 15:07:13 2011
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f4520
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _QUEUE_STACK
               00016         global _LastOSDuty
               00017         global _SelectedTask
               00018         global _iQueueAddress
               00019         global _BufferText
               00020         global _version
               00021         global _OSSchedule
               00022         global _DelayTask
               00023         global _DelayTaskHMSM
               00024         global _OS_TICK_HANDLER
               00025         global _BRTOSStart
               00026         global _PreInstallTasks
               00027         global _BlockPriority
               00028         global _UnBlockPriority
               00029         global _BlockTask
               00030         global _UnBlockTask
               00031         global _BlockMultipleTask
               00032         global _UnBlockMultipleTask
               00033         global _Idle
               00034         global _InstallTask
               00035         global _InstallIdle
               00036         global _BRTOS_Init
               00037         global _initEvents
               00038         global _SAScheduler
               00039         global _PriorityVector
               00040         global _iStackAddress
               00041         global _StackAddress
               00042         global _NumberOfInstalledTasks
               00043         global _currentTask
               00044         global _OSReadyList
               00045         global _OSBlockedList
               00046         global _counter
               00047         global _OSDuty
               00048         global _OSDutyTmp
               00049         global _DutyCnt
               00050         global _TaskAlloc
               00051         global _iNesting
               00052         global _Tail
               00053         global _Head
               00054         global _BRTOS_Sem_Table
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         global _BRTOS_Mutex_Table
               00056         global _BRTOS_Queue_Table
               00057         global _STACK
               00058         global _ContextTask
               00059         global _PriorityMask
               00060 
               00061 ;--------------------------------------------------------
               00062 ; extern variables in this module
               00063 ;--------------------------------------------------------
               00064         extern __gptrput2
               00065         extern __gptrput3
               00066         extern __gptrget1
               00067         extern __gptrget2
               00068         extern __gptrget3
               00069         extern __gptrput1
               00070         extern _PORTAbits
               00071         extern _PORTBbits
               00072         extern _PORTCbits
               00073         extern _PORTDbits
               00074         extern _PORTEbits
               00075         extern _LATAbits
               00076         extern _LATBbits
               00077         extern _LATCbits
               00078         extern _LATDbits
               00079         extern _LATEbits
               00080         extern _DDRAbits
               00081         extern _TRISAbits
               00082         extern _DDRBbits
               00083         extern _TRISBbits
               00084         extern _DDRCbits
               00085         extern _TRISCbits
               00086         extern _DDRDbits
               00087         extern _TRISDbits
               00088         extern _DDREbits
               00089         extern _TRISEbits
               00090         extern _OSCTUNEbits
               00091         extern _PIE1bits
               00092         extern _PIR1bits
               00093         extern _IPR1bits
               00094         extern _PIE2bits
               00095         extern _PIR2bits
               00096         extern _IPR2bits
               00097         extern _EECON1bits
               00098         extern _RCSTAbits
               00099         extern _TXSTAbits
               00100         extern _T3CONbits
               00101         extern _CMCONbits
               00102         extern _CVRCONbits
               00103         extern _ECCP1ASbits
               00104         extern _PWM1CONbits
               00105         extern _BAUDCONbits
               00106         extern _BAUDCTLbits
               00107         extern _CCP2CONbits
               00108         extern _CCP1CONbits
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _ADCON2bits
               00110         extern _ADCON1bits
               00111         extern _ADCON0bits
               00112         extern _SSPCON2bits
               00113         extern _SSPCON1bits
               00114         extern _SSPSTATbits
               00115         extern _T2CONbits
               00116         extern _T1CONbits
               00117         extern _RCONbits
               00118         extern _WDTCONbits
               00119         extern _HLVDCONbits
               00120         extern _LVDCONbits
               00121         extern _OSCCONbits
               00122         extern _T0CONbits
               00123         extern _STATUSbits
               00124         extern _INTCON3bits
               00125         extern _INTCON2bits
               00126         extern _INTCONbits
               00127         extern _STKPTRbits
               00128         extern _SPvalue
               00129         extern _Hora
               00130         extern _Data
               00131         extern _PORTA
               00132         extern _PORTB
               00133         extern _PORTC
               00134         extern _PORTD
               00135         extern _PORTE
               00136         extern _LATA
               00137         extern _LATB
               00138         extern _LATC
               00139         extern _LATD
               00140         extern _LATE
               00141         extern _DDRA
               00142         extern _TRISA
               00143         extern _DDRB
               00144         extern _TRISB
               00145         extern _DDRC
               00146         extern _TRISC
               00147         extern _DDRD
               00148         extern _TRISD
               00149         extern _DDRE
               00150         extern _TRISE
               00151         extern _OSCTUNE
               00152         extern _PIE1
               00153         extern _PIR1
               00154         extern _IPR1
               00155         extern _PIE2
               00156         extern _PIR2
               00157         extern _IPR2
               00158         extern _EECON1
               00159         extern _EECON2
               00160         extern _EEDATA
               00161         extern _EEADR
               00162         extern _RCSTA
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _TXSTA
               00164         extern _TXREG
               00165         extern _RCREG
               00166         extern _SPBRG
               00167         extern _SPBRGH
               00168         extern _T3CON
               00169         extern _TMR3L
               00170         extern _TMR3H
               00171         extern _CMCON
               00172         extern _CVRCON
               00173         extern _ECCP1AS
               00174         extern _PWM1CON
               00175         extern _BAUDCON
               00176         extern _BAUDCTL
               00177         extern _CCP2CON
               00178         extern _CCPR2
               00179         extern _CCPR2L
               00180         extern _CCPR2H
               00181         extern _CCP1CON
               00182         extern _CCPR1
               00183         extern _CCPR1L
               00184         extern _CCPR1H
               00185         extern _ADCON2
               00186         extern _ADCON1
               00187         extern _ADCON0
               00188         extern _ADRES
               00189         extern _ADRESL
               00190         extern _ADRESH
               00191         extern _SSPCON2
               00192         extern _SSPCON1
               00193         extern _SSPSTAT
               00194         extern _SSPADD
               00195         extern _SSPBUF
               00196         extern _T2CON
               00197         extern _PR2
               00198         extern _TMR2
               00199         extern _T1CON
               00200         extern _TMR1L
               00201         extern _TMR1H
               00202         extern _RCON
               00203         extern _WDTCON
               00204         extern _HLVDCON
               00205         extern _LVDCON
               00206         extern _OSCCON
               00207         extern _T0CON
               00208         extern _TMR0L
               00209         extern _TMR0H
               00210         extern _STATUS
               00211         extern _FSR2L
               00212         extern _FSR2H
               00213         extern _PLUSW2
               00214         extern _PREINC2
               00215         extern _POSTDEC2
               00216         extern _POSTINC2
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _INDF2
               00218         extern _BSR
               00219         extern _FSR1L
               00220         extern _FSR1H
               00221         extern _PLUSW1
               00222         extern _PREINC1
               00223         extern _POSTDEC1
               00224         extern _POSTINC1
               00225         extern _INDF1
               00226         extern _WREG
               00227         extern _FSR0L
               00228         extern _FSR0H
               00229         extern _PLUSW0
               00230         extern _PREINC0
               00231         extern _POSTDEC0
               00232         extern _POSTINC0
               00233         extern _INDF0
               00234         extern _INTCON3
               00235         extern _INTCON2
               00236         extern _INTCON
               00237         extern _PROD
               00238         extern _PRODL
               00239         extern _PRODH
               00240         extern _TABLAT
               00241         extern _TBLPTR
               00242         extern _TBLPTRL
               00243         extern _TBLPTRH
               00244         extern _TBLPTRU
               00245         extern _PC
               00246         extern _PCL
               00247         extern _PCLATH
               00248         extern _PCLATU
               00249         extern _STKPTR
               00250         extern _TOS
               00251         extern _TOSL
               00252         extern _TOSH
               00253         extern _TOSU
               00254         extern _CreateVirtualStack
               00255         extern _TickTimerSetup
               00256         extern _SwitchContext
               00257         extern __mullong
               00258         extern __divulong
               00259         extern __modulong
               00260 ;--------------------------------------------------------
               00261 ;       Equates to used internal registers
               00262 ;--------------------------------------------------------
  00000FD8     00263 STATUS  equ     0xfd8
  00000FE8     00264 WREG    equ     0xfe8
  00000FF6     00265 TBLPTRL equ     0xff6
  00000FF7     00266 TBLPTRH equ     0xff7
  00000FF8     00267 TBLPTRU equ     0xff8
  00000FF5     00268 TABLAT  equ     0xff5
  00000FE9     00269 FSR0L   equ     0xfe9
  00000FEA     00270 FSR0H   equ     0xfea
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE1     00271 FSR1L   equ     0xfe1
  00000FE2     00272 FSR1H   equ     0xfe2
  00000FD9     00273 FSR2L   equ     0xfd9
  00000FDA     00274 FSR2H   equ     0xfda
  00000FEF     00275 INDF0   equ     0xfef
  00000FEE     00276 POSTINC0        equ     0xfee
  00000FE5     00277 POSTDEC1        equ     0xfe5
  00000FE4     00278 PREINC1 equ     0xfe4
  00000FDB     00279 PLUSW2  equ     0xfdb
  00000FF3     00280 PRODL   equ     0xff3
  00000FF4     00281 PRODH   equ     0xff4
               00282 
               00283 
               00284         idata
               00285 _version        db      LOW(__str_0), HIGH(__str_0), UPPER(__str_0)
               00286 _iStackAddress  db      0x00, 0x00
               00287 _iQueueAddress  db      0x00, 0x00
               00288 _StackAddress   db      0x00, 0x00
               00289 _OSReadyList    db      0x00, 0x00
               00290 _OSBlockedList  db      0xff, 0xff
               00291 _OSDuty db      0x00, 0x00, 0x00, 0x00
               00292 _OSDutyTmp      db      0x00, 0x00, 0x00, 0x00
               00293 _LastOSDuty     db      0x00, 0x00
               00294 _DutyCnt        db      0x00, 0x00
               00295 _TaskAlloc      db      0x00, 0x00, 0x00, 0x00
               00296 _iNesting       db      0x00
               00297 
               00298 
               00299 ; Internal registers
               00300 .registers      udata_ovr       0x0000
               00301 r0x00   res     1
               00302 r0x01   res     1
               00303 r0x02   res     1
               00304 r0x03   res     1
               00305 r0x04   res     1
               00306 r0x05   res     1
               00307 r0x06   res     1
               00308 r0x07   res     1
               00309 r0x08   res     1
               00310 r0x09   res     1
               00311 r0x0a   res     1
               00312 r0x0b   res     1
               00313 r0x0c   res     1
               00314 r0x0d   res     1
               00315 r0x0e   res     1
               00316 r0x0f   res     1
               00317 r0x10   res     1
               00318 r0x11   res     1
               00319 r0x12   res     1
               00320 r0x13   res     1
               00321 r0x14   res     1
               00322 r0x15   res     1
               00323 
               00324 udata_BRTOS_0   udata
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325 _BufferText     res     32
               00326 
               00327 udata_BRTOS_1   udata
               00328 _SelectedTask   res     1
               00329 
               00330 udata_BRTOS_2   udata
               00331 _QUEUE_STACK    res     128
               00332 
               00333 udata_BRTOS_3   udata
               00334 _PriorityVector res     16
               00335 
               00336 udata_BRTOS_4   udata
               00337 _Tail   res     3
               00338 
               00339 udata_BRTOS_5   udata
               00340 _Head   res     3
               00341 
               00342 udata_BRTOS_6   udata
               00343 _ContextTask    res     144
               00344 
               00345 udata_BRTOS_7   udata
               00346 _currentTask    res     1
               00347 
               00348 udata_BRTOS_8   udata
               00349 _counter        res     2
               00350 
               00351 udata_BRTOS_9   udata
               00352 _NumberOfInstalledTasks res     1
               00353 
               00354 udata_BRTOS_10  udata
               00355 _STACK  res     128
               00356 
               00357 udata_BRTOS_11  udata
               00358 _BRTOS_Sem_Table        res     10
               00359 
               00360 udata_BRTOS_12  udata
               00361 _BRTOS_Mutex_Table      res     16
               00362 
               00363 udata_BRTOS_13  udata
               00364 _BRTOS_Queue_Table      res     24
               00365 
               00366 ;--------------------------------------------------------
               00367 ; global & static initialisations
               00368 ;--------------------------------------------------------
               00369 ; I code from now on!
               00370 ; ; Starting pCode block
               00371 S_BRTOS__SAScheduler    code
0000 00372 _SAScheduler:
               00373 ;       .line   1199; brtos/BRTOS.c     INT8U SAScheduler(PriorityType ReadyList)
0000 CFDA FFE5 00374         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 00375         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 00376         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 00377         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 00378         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 C000 FFE5 00379         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 00380         MOVFF   r0x02, POSTDEC1
001C 0E03      00381         MOVLW   0x03
001E CFDB F000 00382         MOVFF   PLUSW2, r0x00
0022 0E04      00383         MOVLW   0x04
0024 CFDB F000 00384         MOVFF   PLUSW2, r0x01
               00385 ;       .line   1318; brtos/BRTOS.c     if (ReadyList > 0xFF)
0028 0E01      00386         MOVLW   0x01
002A 5C00      00387         SUBWF   r0x01, W
002C E100      00388         BNZ     _00532_DS_
002E 0E00      00389         MOVLW   0x00
0030 5C00      00390         SUBWF   r0x00, W
0032 00391 _00532_DS_:
0032 A0D8      00392         BTFSS   STATUS, 0
0034 D000      00393         BRA     _00513_DS_
               00394 ;       .line   1320; brtos/BRTOS.c     if (ReadyList > 0xFFF)
0036 0E10      00395         MOVLW   0x10
0038 5C00      00396         SUBWF   r0x01, W
003A E100      00397         BNZ     _00533_DS_
003C 0E00      00398         MOVLW   0x00
003E 5C00      00399         SUBWF   r0x00, W
0040 00400 _00533_DS_:
0040 E300      00401         BNC     _00489_DS_
               00402 ;       .line   1322; brtos/BRTOS.c     if (ReadyList > 0x3FFF)
0042 0E40      00403         MOVLW   0x40
0044 5C00      00404         SUBWF   r0x01, W
0046 E100      00405         BNZ     _00534_DS_
0048 0E00      00406         MOVLW   0x00
004A 5C00      00407         SUBWF   r0x00, W
004C 00408 _00534_DS_:
004C E300      00409         BNC     _00477_DS_
               00410 ;       .line   1324; brtos/BRTOS.c     if (ReadyList > 0x7FFF)
004E 0E80      00411         MOVLW   0x80
0050 5C00      00412         SUBWF   r0x01, W
0052 E100      00413         BNZ     _00535_DS_
0054 0E00      00414         MOVLW   0x00
0056 5C00      00415         SUBWF   r0x00, W
0058 00416 _00535_DS_:
0058 E300      00417         BNC     _00471_DS_
               00418 ;       .line   1326; brtos/BRTOS.c     prio = 15;
005A 0E0F      00419         MOVLW   0x0f
005C 6E00      00420         MOVWF   r0x02
005E D000      00421         BRA     _00514_DS_
0060 00422 _00471_DS_:
               00423 ;       .line   1330; brtos/BRTOS.c     prio = 14;
0060 0E0E      00424         MOVLW   0x0e
0062 6E00      00425         MOVWF   r0x02
0064 D000      00426         BRA     _00514_DS_
0066 00427 _00477_DS_:
               00428 ;       .line   1335; brtos/BRTOS.c     if (ReadyList > 0x1FFF)
0066 0E20      00429         MOVLW   0x20
0068 5C00      00430         SUBWF   r0x01, W
006A E100      00431         BNZ     _00536_DS_
006C 0E00      00432         MOVLW   0x00
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 5C00      00433         SUBWF   r0x00, W
0070 00434 _00536_DS_:
0070 E300      00435         BNC     _00474_DS_
               00436 ;       .line   1337; brtos/BRTOS.c     prio = 13; 
0072 0E0D      00437         MOVLW   0x0d
0074 6E00      00438         MOVWF   r0x02
0076 D000      00439         BRA     _00514_DS_
0078 00440 _00474_DS_:
               00441 ;       .line   1341; brtos/BRTOS.c     prio = 12;
0078 0E0C      00442         MOVLW   0x0c
007A 6E00      00443         MOVWF   r0x02
007C D000      00444         BRA     _00514_DS_
007E 00445 _00489_DS_:
               00446 ;       .line   1347; brtos/BRTOS.c     if (ReadyList > 0x3FF)
007E 0E04      00447         MOVLW   0x04
0080 5C00      00448         SUBWF   r0x01, W
0082 E100      00449         BNZ     _00537_DS_
0084 0E00      00450         MOVLW   0x00
0086 5C00      00451         SUBWF   r0x00, W
0088 00452 _00537_DS_:
0088 E300      00453         BNC     _00486_DS_
               00454 ;       .line   1349; brtos/BRTOS.c     if (ReadyList > 0x7FF)
008A 0E08      00455         MOVLW   0x08
008C 5C00      00456         SUBWF   r0x01, W
008E E100      00457         BNZ     _00538_DS_
0090 0E00      00458         MOVLW   0x00
0092 5C00      00459         SUBWF   r0x00, W
0094 00460 _00538_DS_:
0094 E300      00461         BNC     _00480_DS_
               00462 ;       .line   1351; brtos/BRTOS.c     prio = 11;
0096 0E0B      00463         MOVLW   0x0b
0098 6E00      00464         MOVWF   r0x02
009A D000      00465         BRA     _00514_DS_
009C 00466 _00480_DS_:
               00467 ;       .line   1355; brtos/BRTOS.c     prio = 10;
009C 0E0A      00468         MOVLW   0x0a
009E 6E00      00469         MOVWF   r0x02
00A0 D000      00470         BRA     _00514_DS_
00A2 00471 _00486_DS_:
               00472 ;       .line   1360; brtos/BRTOS.c     if (ReadyList > 0x1FF)
00A2 0E02      00473         MOVLW   0x02
00A4 5C00      00474         SUBWF   r0x01, W
00A6 E100      00475         BNZ     _00539_DS_
00A8 0E00      00476         MOVLW   0x00
00AA 5C00      00477         SUBWF   r0x00, W
00AC 00478 _00539_DS_:
00AC E300      00479         BNC     _00483_DS_
               00480 ;       .line   1362; brtos/BRTOS.c     prio = 9;
00AE 0E09      00481         MOVLW   0x09
00B0 6E00      00482         MOVWF   r0x02
00B2 D000      00483         BRA     _00514_DS_
00B4 00484 _00483_DS_:
               00485 ;       .line   1366; brtos/BRTOS.c     prio = 8;
00B4 0E08      00486         MOVLW   0x08
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B6 6E00      00487         MOVWF   r0x02
00B8 D000      00488         BRA     _00514_DS_
00BA 00489 _00513_DS_:
               00490 ;       .line   1374; brtos/BRTOS.c     if (ReadyList > 0x0F)
00BA 0E00      00491         MOVLW   0x00
00BC 5C00      00492         SUBWF   r0x01, W
00BE E100      00493         BNZ     _00540_DS_
00C0 0E10      00494         MOVLW   0x10
00C2 5C00      00495         SUBWF   r0x00, W
00C4 00496 _00540_DS_:
00C4 E300      00497         BNC     _00510_DS_
               00498 ;       .line   1376; brtos/BRTOS.c     if (ReadyList > 0x3F)
00C6 0E00      00499         MOVLW   0x00
00C8 5C00      00500         SUBWF   r0x01, W
00CA E100      00501         BNZ     _00541_DS_
00CC 0E40      00502         MOVLW   0x40
00CE 5C00      00503         SUBWF   r0x00, W
00D0 00504 _00541_DS_:
00D0 E300      00505         BNC     _00498_DS_
               00506 ;       .line   1378; brtos/BRTOS.c     if (ReadyList > 0x7F)
00D2 0E00      00507         MOVLW   0x00
00D4 5C00      00508         SUBWF   r0x01, W
00D6 E100      00509         BNZ     _00542_DS_
00D8 0E80      00510         MOVLW   0x80
00DA 5C00      00511         SUBWF   r0x00, W
00DC 00512 _00542_DS_:
00DC E300      00513         BNC     _00492_DS_
               00514 ;       .line   1380; brtos/BRTOS.c     prio = 7;
00DE 0E07      00515         MOVLW   0x07
00E0 6E00      00516         MOVWF   r0x02
00E2 D000      00517         BRA     _00514_DS_
00E4 00518 _00492_DS_:
               00519 ;       .line   1384; brtos/BRTOS.c     prio = 6;
00E4 0E06      00520         MOVLW   0x06
00E6 6E00      00521         MOVWF   r0x02
00E8 D000      00522         BRA     _00514_DS_
00EA 00523 _00498_DS_:
               00524 ;       .line   1389; brtos/BRTOS.c     if (ReadyList > 0x1F)
00EA 0E00      00525         MOVLW   0x00
00EC 5C00      00526         SUBWF   r0x01, W
00EE E100      00527         BNZ     _00543_DS_
00F0 0E20      00528         MOVLW   0x20
00F2 5C00      00529         SUBWF   r0x00, W
00F4 00530 _00543_DS_:
00F4 E300      00531         BNC     _00495_DS_
               00532 ;       .line   1391; brtos/BRTOS.c     prio = 5; 
00F6 0E05      00533         MOVLW   0x05
00F8 6E00      00534         MOVWF   r0x02
00FA D000      00535         BRA     _00514_DS_
00FC 00536 _00495_DS_:
               00537 ;       .line   1395; brtos/BRTOS.c     prio = 4;
00FC 0E04      00538         MOVLW   0x04
00FE 6E00      00539         MOVWF   r0x02
0100 D000      00540         BRA     _00514_DS_
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0102 00541 _00510_DS_:
               00542 ;       .line   1401; brtos/BRTOS.c     if (ReadyList > 0x03)
0102 0E00      00543         MOVLW   0x00
0104 5C00      00544         SUBWF   r0x01, W
0106 E100      00545         BNZ     _00544_DS_
0108 0E04      00546         MOVLW   0x04
010A 5C00      00547         SUBWF   r0x00, W
010C 00548 _00544_DS_:
010C E300      00549         BNC     _00507_DS_
               00550 ;       .line   1403; brtos/BRTOS.c     if (ReadyList > 0x07)
010E 0E00      00551         MOVLW   0x00
0110 5C00      00552         SUBWF   r0x01, W
0112 E100      00553         BNZ     _00545_DS_
0114 0E08      00554         MOVLW   0x08
0116 5C00      00555         SUBWF   r0x00, W
0118 00556 _00545_DS_:
0118 E300      00557         BNC     _00501_DS_
               00558 ;       .line   1405; brtos/BRTOS.c     prio = 3;
011A 0E03      00559         MOVLW   0x03
011C 6E00      00560         MOVWF   r0x02
011E D000      00561         BRA     _00514_DS_
0120 00562 _00501_DS_:
               00563 ;       .line   1409; brtos/BRTOS.c     prio = 2;
0120 0E02      00564         MOVLW   0x02
0122 6E00      00565         MOVWF   r0x02
0124 D000      00566         BRA     _00514_DS_
0126 00567 _00507_DS_:
               00568 ;       .line   1414; brtos/BRTOS.c     if (ReadyList > 0x1)
0126 0E00      00569         MOVLW   0x00
0128 5C00      00570         SUBWF   r0x01, W
012A E100      00571         BNZ     _00546_DS_
012C 0E02      00572         MOVLW   0x02
012E 5C00      00573         SUBWF   r0x00, W
0130 00574 _00546_DS_:
0130 E300      00575         BNC     _00504_DS_
               00576 ;       .line   1416; brtos/BRTOS.c     prio = 1;
0132 0E01      00577         MOVLW   0x01
0134 6E00      00578         MOVWF   r0x02
0136 D000      00579         BRA     _00514_DS_
0138 00580 _00504_DS_:
               00581 ;       .line   1420; brtos/BRTOS.c     prio = 0;
0138 6A00      00582         CLRF    r0x02
013A 00583 _00514_DS_:
               00584 ;       .line   1430; brtos/BRTOS.c     return prio;
013A 5000      00585         MOVF    r0x02, W
013C CFE4 F000 00586         MOVFF   PREINC1, r0x02
0140 CFE4 F000 00587         MOVFF   PREINC1, r0x01
0144 CFE4 F000 00588         MOVFF   PREINC1, r0x00
0148 CFE4 FFD9 00589         MOVFF   PREINC1, FSR2L
014C CFE4 FFDA 00590         MOVFF   PREINC1, FSR2H
0150 0012      00591         RETURN  
               00592 
               00593 ; ; Starting pCode block
               00594 S_BRTOS__initEvents     code
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 00595 _initEvents:
               00596 ;       .line   1161; brtos/BRTOS.c     void initEvents(void)
0000 CFDA FFE5 00597         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 00598         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 00599         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 00600         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 00601         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 00602         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 00603         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 00604         MOVFF   r0x03, POSTDEC1
               00605 ;       .line   1166; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_SEM;i++)
0020 0E02      00606         MOVLW   0x02
0022 6E00      00607         MOVWF   r0x00
0024 00608 _00458_DS_:
               00609 ;       .line   1167; brtos/BRTOS.c     BRTOS_Sem_Table[i].OSEventAllocated = 0;
0024 0400      00610         DECF    r0x00, W
0026 6E00      00611         MOVWF   r0x01
               00612 ; ;multiply lit val:0x05 by variable r0x01 and store in r0x02
               00613 ; ;Unrolled 8 X 8 multiplication
               00614 ; ;FIXME: the function does not support result==WREG
0028 5000      00615         MOVF    r0x01, W
002A 0D05      00616         MULLW   0x05
002C CFF3 F000 00617         MOVFF   PRODL, r0x02
0030 6A00      00618         CLRF    r0x03
0032 0E00      00619         MOVLW   LOW(_BRTOS_Sem_Table)
0034 2600      00620         ADDWF   r0x02, F
0036 0E00      00621         MOVLW   HIGH(_BRTOS_Sem_Table)
0038 2200      00622         ADDWFC  r0x03, F
003A C000 FFE9 00623         MOVFF   r0x02, FSR0L
003E C000 FFEA 00624         MOVFF   r0x03, FSR0H
0042 0E00      00625         MOVLW   0x00
0044 6EEF      00626         MOVWF   INDF0
0046 C000 F000 00627         MOVFF   r0x01, r0x00
               00628 ;       .line   1166; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_SEM;i++)
004A 5000      00629         MOVF    r0x00, W
004C E100      00630         BNZ     _00458_DS_
               00631 ;       .line   1171; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_MUTEX;i++)
004E 0E02      00632         MOVLW   0x02
0050 6E00      00633         MOVWF   r0x00
0052 00634 _00461_DS_:
               00635 ;       .line   1172; brtos/BRTOS.c     BRTOS_Mutex_Table[i].OSEventAllocated = 0;
0052 0400      00636         DECF    r0x00, W
0054 6E00      00637         MOVWF   r0x01
               00638 ; ;multiply lit val:0x08 by variable r0x01 and store in r0x02
               00639 ; ;Unrolled 8 X 8 multiplication
               00640 ; ;FIXME: the function does not support result==WREG
0056 5000      00641         MOVF    r0x01, W
0058 0D08      00642         MULLW   0x08
005A CFF3 F000 00643         MOVFF   PRODL, r0x02
005E 6A00      00644         CLRF    r0x03
0060 0E00      00645         MOVLW   LOW(_BRTOS_Mutex_Table)
0062 2600      00646         ADDWF   r0x02, F
0064 0E00      00647         MOVLW   HIGH(_BRTOS_Mutex_Table)
0066 2200      00648         ADDWFC  r0x03, F
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0068 C000 FFE9 00649         MOVFF   r0x02, FSR0L
006C C000 FFEA 00650         MOVFF   r0x03, FSR0H
0070 0E00      00651         MOVLW   0x00
0072 6EEF      00652         MOVWF   INDF0
0074 C000 F000 00653         MOVFF   r0x01, r0x00
               00654 ;       .line   1171; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_MUTEX;i++)
0078 5000      00655         MOVF    r0x00, W
007A E100      00656         BNZ     _00461_DS_
               00657 ;       .line   1181; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_QUEUE;i++)
007C 0E03      00658         MOVLW   0x03
007E 6E00      00659         MOVWF   r0x00
0080 00660 _00464_DS_:
               00661 ;       .line   1182; brtos/BRTOS.c     BRTOS_Queue_Table[i].OSEventAllocated = 0;    
0080 0400      00662         DECF    r0x00, W
0082 6E00      00663         MOVWF   r0x01
               00664 ; ;multiply lit val:0x08 by variable r0x01 and store in r0x02
               00665 ; ;Unrolled 8 X 8 multiplication
               00666 ; ;FIXME: the function does not support result==WREG
0084 5000      00667         MOVF    r0x01, W
0086 0D08      00668         MULLW   0x08
0088 CFF3 F000 00669         MOVFF   PRODL, r0x02
008C 6A00      00670         CLRF    r0x03
008E 0E00      00671         MOVLW   LOW(_BRTOS_Queue_Table)
0090 2600      00672         ADDWF   r0x02, F
0092 0E00      00673         MOVLW   HIGH(_BRTOS_Queue_Table)
0094 2200      00674         ADDWFC  r0x03, F
0096 C000 FFE9 00675         MOVFF   r0x02, FSR0L
009A C000 FFEA 00676         MOVFF   r0x03, FSR0H
009E 0E00      00677         MOVLW   0x00
00A0 6EEF      00678         MOVWF   INDF0
00A2 C000 F000 00679         MOVFF   r0x01, r0x00
               00680 ;       .line   1181; brtos/BRTOS.c     for(i=0;i<BRTOS_MAX_QUEUE;i++)
00A6 5000      00681         MOVF    r0x00, W
00A8 E100      00682         BNZ     _00464_DS_
00AA CFE4 F000 00683         MOVFF   PREINC1, r0x03
00AE CFE4 F000 00684         MOVFF   PREINC1, r0x02
00B2 CFE4 F000 00685         MOVFF   PREINC1, r0x01
00B6 CFE4 F000 00686         MOVFF   PREINC1, r0x00
00BA CFE4 FFD9 00687         MOVFF   PREINC1, FSR2L
00BE CFE4 FFDA 00688         MOVFF   PREINC1, FSR2H
00C2 0012      00689         RETURN  
               00690 
               00691 ; ; Starting pCode block
               00692 S_BRTOS__BRTOS_Init     code
0000 00693 _BRTOS_Init:
               00694 ;       .line   1130; brtos/BRTOS.c     void BRTOS_Init(void)
0000 CFDA FFE5 00695         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 00696         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 00697         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 00698         MOVFF   FSR1L, FSR2L
               00699 ;       .line   1134; brtos/BRTOS.c     StackAddress = (INT16U)&STACK;
0010 0E00      00700         MOVLW   LOW(_STACK)
0012 0000      00701         BANKSEL _StackAddress
0014 6F00      00702         MOVWF   _StackAddress, B
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0016 0E00      00703         MOVLW   HIGH(_STACK)
0018 0000      00704         BANKSEL (_StackAddress + 1)
001A 6F00      00705         MOVWF   (_StackAddress + 1), B
               00706 ;       .line   1138; brtos/BRTOS.c     initEvents();
001C EC00 F000 00707         CALL    _initEvents
               00708 ;       .line   1143; brtos/BRTOS.c     PreInstallTasks();  
0020 EC00 F000 00709         CALL    _PreInstallTasks
               00710 ;       .line   1148; brtos/BRTOS.c     TickTimerSetup(); 
0024 EC00 F000 00711         CALL    _TickTimerSetup
0028 CFE4 FFD9 00712         MOVFF   PREINC1, FSR2L
002C CFE4 FFDA 00713         MOVFF   PREINC1, FSR2H
0030 0012      00714         RETURN  
               00715 
               00716 ; ; Starting pCode block
               00717 S_BRTOS__InstallIdle    code
0000 00718 _InstallIdle:
               00719 ;       .line   1056; brtos/BRTOS.c     INT8U InstallIdle(void(*FctPtr)(void), INT16U USER_STACKED_BYTES)
0000 CFDA FFE5 00720         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 00721         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 00722         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 00723         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 00724         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 00725         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 00726         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 00727         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 00728         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 00729         MOVFF   r0x05, POSTDEC1
0028 C000 FFE5 00730         MOVFF   r0x06, POSTDEC1
002C 0E03      00731         MOVLW   0x03
002E CFDB F000 00732         MOVFF   PLUSW2, r0x00
0032 0E04      00733         MOVLW   0x04
0034 CFDB F000 00734         MOVFF   PLUSW2, r0x01
0038 0E05      00735         MOVLW   0x05
003A CFDB F000 00736         MOVFF   PLUSW2, r0x02
003E 0E06      00737         MOVLW   0x06
0040 CFDB F000 00738         MOVFF   PLUSW2, r0x03
0044 0E07      00739         MOVLW   0x07
0046 CFDB F000 00740         MOVFF   PLUSW2, r0x04
004A 0000      00741         BANKSEL _currentTask
               00742 ;       .line   1060; brtos/BRTOS.c     if (currentTask)
004C 5100      00743         MOVF    _currentTask, W, B
004E E000      00744         BZ      _00426_DS_
               00745 ;       .line   1062; brtos/BRTOS.c     OSEnterCritical();
0050 9E00      00746         BCF     _INTCONbits, 7
0052 00747 _00426_DS_:
               00748 ;       .line   1064; brtos/BRTOS.c     if (USER_STACKED_BYTES < NUMBER_MIN_OF_STACKED_BYTES)
0052 0E00      00749         MOVLW   0x00
0054 5C00      00750         SUBWF   r0x04, W
0056 E100      00751         BNZ     _00445_DS_
0058 0E38      00752         MOVLW   0x38
005A 5C00      00753         SUBWF   r0x03, W
005C 00754 _00445_DS_:
005C E200      00755         BC      _00430_DS_
005E 0000      00756         BANKSEL _currentTask
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00757 ;       .line   1066; brtos/BRTOS.c     if (currentTask)
0060 5100      00758         MOVF    _currentTask, W, B
0062 E000      00759         BZ      _00428_DS_
               00760 ;       .line   1068; brtos/BRTOS.c     OSExitCritical();
0064 8E00      00761         BSF     _INTCONbits, 7
0066 00762 _00428_DS_:
               00763 ;       .line   1069; brtos/BRTOS.c     return STACK_SIZE_TOO_SMALL;
0066 0E02      00764         MOVLW   0x02
0068 D000      00765         BRA     _00437_DS_
006A 00766 _00430_DS_:
               00767 ;       .line   1072; brtos/BRTOS.c     if ((iStackAddress + USER_STACKED_BYTES) > HEAP_SIZE)
006A 5000      00768         MOVF    r0x03, W
006C 0000      00769         BANKSEL _iStackAddress
006E 2500      00770         ADDWF   _iStackAddress, W, B
0070 6E00      00771         MOVWF   r0x05
0072 5000      00772         MOVF    r0x04, W
0074 0000      00773         BANKSEL (_iStackAddress + 1)
0076 2100      00774         ADDWFC  (_iStackAddress + 1), W, B
0078 6E00      00775         MOVWF   r0x06
007A 0E00      00776         MOVLW   0x00
007C 5C00      00777         SUBWF   r0x06, W
007E E100      00778         BNZ     _00446_DS_
0080 0E81      00779         MOVLW   0x81
0082 5C00      00780         SUBWF   r0x05, W
0084 00781 _00446_DS_:
0084 E300      00782         BNC     _00434_DS_
0086 0000      00783         BANKSEL _currentTask
               00784 ;       .line   1074; brtos/BRTOS.c     if (currentTask)
0088 5100      00785         MOVF    _currentTask, W, B
008A E000      00786         BZ      _00432_DS_
               00787 ;       .line   1076; brtos/BRTOS.c     OSExitCritical();
008C 8E00      00788         BSF     _INTCONbits, 7
008E 00789 _00432_DS_:
               00790 ;       .line   1077; brtos/BRTOS.c     return NO_MEMORY;
008E 0E01      00791         MOVLW   0x01
0090 D000      00792         BRA     _00437_DS_
0092 00793 _00434_DS_:
0092 0000      00794         BANKSEL _StackAddress
               00795 ;       .line   1084; brtos/BRTOS.c     ContextTask[NUMBER_OF_TASKS+1].StackPoint = StackAddress + NUMBER_MIN_OF_STACKED_BYTES;
0094 5100      00796         MOVF    _StackAddress, W, B
0096 0F38      00797         ADDLW   0x38
0098 6E00      00798         MOVWF   r0x05
009A 0E00      00799         MOVLW   0x00
009C 0000      00800         BANKSEL (_StackAddress + 1)
009E 2100      00801         ADDWFC  (_StackAddress + 1), W, B
00A0 6E00      00802         MOVWF   r0x06
00A2 5000      00803         MOVF    r0x05, W
00A4 0000      00804         BANKSEL (_ContextTask + 131)
00A6 6F00      00805         MOVWF   (_ContextTask + 131), B
00A8 5000      00806         MOVF    r0x06, W
00AA 0000      00807         BANKSEL (_ContextTask + 132)
00AC 6F00      00808         MOVWF   (_ContextTask + 132), B
00AE 0000      00809         BANKSEL _StackAddress
               00810 ;       .line   1091; brtos/BRTOS.c     ContextTask[NUMBER_OF_TASKS+1].StackInit = StackAddress;
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 5100      00811         MOVF    _StackAddress, W, B
00B2 0000      00812         BANKSEL (_ContextTask + 133)
00B4 6F00      00813         MOVWF   (_ContextTask + 133), B
00B6 0000      00814         BANKSEL (_StackAddress + 1)
00B8 5100      00815         MOVF    (_StackAddress + 1), W, B
00BA 0000      00816         BANKSEL (_ContextTask + 134)
00BC 6F00      00817         MOVWF   (_ContextTask + 134), B
00BE 0000      00818         BANKSEL (_ContextTask + 137)
               00819 ;       .line   1097; brtos/BRTOS.c     ContextTask[NUMBER_OF_TASKS+1].Priority = 0;
00C0 6B00      00820         CLRF    (_ContextTask + 137), B
               00821 ;       .line   1099; brtos/BRTOS.c     PriorityVector[0] = NUMBER_OF_TASKS+1;
00C2 0E08      00822         MOVLW   0x08
00C4 0000      00823         BANKSEL _PriorityVector
00C6 6F00      00824         MOVWF   _PriorityVector, B
               00825 ;       .line   1102; brtos/BRTOS.c     CreateVirtualStack(FctPtr, USER_STACKED_BYTES);    
00C8 5000      00826         MOVF    r0x04, W
00CA 6EE5      00827         MOVWF   POSTDEC1
00CC 5000      00828         MOVF    r0x03, W
00CE 6EE5      00829         MOVWF   POSTDEC1
00D0 5000      00830         MOVF    r0x02, W
00D2 6EE5      00831         MOVWF   POSTDEC1
00D4 5000      00832         MOVF    r0x01, W
00D6 6EE5      00833         MOVWF   POSTDEC1
00D8 5000      00834         MOVF    r0x00, W
00DA 6EE5      00835         MOVWF   POSTDEC1
00DC EC00 F000 00836         CALL    _CreateVirtualStack
00E0 0E05      00837         MOVLW   0x05
00E2 26E1      00838         ADDWF   FSR1L, F
00E4 B0D8      00839         BTFSC   STATUS, 0
00E6 2AE2      00840         INCF    FSR1H, F
               00841 ;       .line   1105; brtos/BRTOS.c     iStackAddress = iStackAddress + USER_STACKED_BYTES;
00E8 5000      00842         MOVF    r0x03, W
00EA 0000      00843         BANKSEL _iStackAddress
00EC 2700      00844         ADDWF   _iStackAddress, F, B
00EE 5000      00845         MOVF    r0x04, W
00F0 0000      00846         BANKSEL (_iStackAddress + 1)
00F2 2300      00847         ADDWFC  (_iStackAddress + 1), F, B
               00848 ;       .line   1108; brtos/BRTOS.c     StackAddress = StackAddress + USER_STACKED_BYTES;   
00F4 5000      00849         MOVF    r0x03, W
00F6 0000      00850         BANKSEL _StackAddress
00F8 2700      00851         ADDWF   _StackAddress, F, B
00FA 5000      00852         MOVF    r0x04, W
00FC 0000      00853         BANKSEL (_StackAddress + 1)
00FE 2300      00854         ADDWFC  (_StackAddress + 1), F, B
               00855 ;       .line   1110; brtos/BRTOS.c     ContextTask[NUMBER_OF_TASKS+1].TimeToWait = NO_TIMEOUT;
0100 0EE8      00856         MOVLW   0xe8
0102 0000      00857         BANKSEL (_ContextTask + 135)
0104 6F00      00858         MOVWF   (_ContextTask + 135), B
0106 0EFD      00859         MOVLW   0xfd
0108 0000      00860         BANKSEL (_ContextTask + 136)
010A 6F00      00861         MOVWF   (_ContextTask + 136), B
010C 0000      00862         BANKSEL _OSReadyList
               00863 ;       .line   1117; brtos/BRTOS.c     OSReadyList = OSReadyList | (PriorityType)1;
010E 8100      00864         BSF     _OSReadyList, 0, B
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0110 0000      00865         BANKSEL _currentTask
               00866 ;       .line   1119; brtos/BRTOS.c     if (currentTask)
0112 5100      00867         MOVF    _currentTask, W, B
0114 E000      00868         BZ      _00436_DS_
               00869 ;       .line   1121; brtos/BRTOS.c     OSExitCritical();
0116 8E00      00870         BSF     _INTCONbits, 7
0118 00871 _00436_DS_:
               00872 ;       .line   1123; brtos/BRTOS.c     return OK;
0118 6AE8      00873         CLRF    WREG
011A 00874 _00437_DS_:
011A CFE4 F000 00875         MOVFF   PREINC1, r0x06
011E CFE4 F000 00876         MOVFF   PREINC1, r0x05
0122 CFE4 F000 00877         MOVFF   PREINC1, r0x04
0126 CFE4 F000 00878         MOVFF   PREINC1, r0x03
012A CFE4 F000 00879         MOVFF   PREINC1, r0x02
012E CFE4 F000 00880         MOVFF   PREINC1, r0x01
0132 CFE4 F000 00881         MOVFF   PREINC1, r0x00
0136 CFE4 FFD9 00882         MOVFF   PREINC1, FSR2L
013A CFE4 FFDA 00883         MOVFF   PREINC1, FSR2H
013E 0012      00884         RETURN  
               00885 
               00886 ; ; Starting pCode block
               00887 S_BRTOS__InstallTask    code
0000 00888 _InstallTask:
               00889 ;       .line   916; brtos/BRTOS.c      INT8U InstallTask(void(*FctPtr)(void),const CHAR8 *TaskName, INT16U USER_STACKED_BYTES,INT8U iPriority)
0000 CFDA FFE5 00890         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 00891         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 00892         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 00893         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 00894         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 00895         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 00896         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 00897         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 00898         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 00899         MOVFF   r0x05, POSTDEC1
0028 C000 FFE5 00900         MOVFF   r0x06, POSTDEC1
002C C000 FFE5 00901         MOVFF   r0x07, POSTDEC1
0030 C000 FFE5 00902         MOVFF   r0x08, POSTDEC1
0034 C000 FFE5 00903         MOVFF   r0x09, POSTDEC1
0038 C000 FFE5 00904         MOVFF   r0x0a, POSTDEC1
003C C000 FFE5 00905         MOVFF   r0x0b, POSTDEC1
0040 C000 FFE5 00906         MOVFF   r0x0c, POSTDEC1
0044 C000 FFE5 00907         MOVFF   r0x0d, POSTDEC1
0048 C000 FFE5 00908         MOVFF   r0x0e, POSTDEC1
004C C000 FFE5 00909         MOVFF   r0x0f, POSTDEC1
0050 C000 FFE5 00910         MOVFF   r0x10, POSTDEC1
0054 C000 FFE5 00911         MOVFF   r0x11, POSTDEC1
0058 C000 FFE5 00912         MOVFF   r0x12, POSTDEC1
005C C000 FFE5 00913         MOVFF   r0x13, POSTDEC1
0060 C000 FFE5 00914         MOVFF   r0x14, POSTDEC1
0064 C000 FFE5 00915         MOVFF   r0x15, POSTDEC1
0068 0E03      00916         MOVLW   0x03
006A CFDB F000 00917         MOVFF   PLUSW2, r0x00
006E 0E04      00918         MOVLW   0x04
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 CFDB F000 00919         MOVFF   PLUSW2, r0x01
0074 0E05      00920         MOVLW   0x05
0076 CFDB F000 00921         MOVFF   PLUSW2, r0x02
007A 0E06      00922         MOVLW   0x06
007C CFDB F000 00923         MOVFF   PLUSW2, r0x03
0080 0E07      00924         MOVLW   0x07
0082 CFDB F000 00925         MOVFF   PLUSW2, r0x04
0086 0E08      00926         MOVLW   0x08
0088 CFDB F000 00927         MOVFF   PLUSW2, r0x05
008C 0E09      00928         MOVLW   0x09
008E CFDB F000 00929         MOVFF   PLUSW2, r0x06
0092 0E0A      00930         MOVLW   0x0a
0094 CFDB F000 00931         MOVFF   PLUSW2, r0x07
0098 0E0B      00932         MOVLW   0x0b
009A CFDB F000 00933         MOVFF   PLUSW2, r0x08
               00934 ;       .line   920; brtos/BRTOS.c      INT8U TaskNumber = 0;
009E 6A00      00935         CLRF    r0x09
00A0 0000      00936         BANKSEL _currentTask
               00937 ;       .line   923; brtos/BRTOS.c      if (currentTask)
00A2 5100      00938         MOVF    _currentTask, W, B
00A4 E000      00939         BZ      _00366_DS_
               00940 ;       .line   925; brtos/BRTOS.c      OSEnterCritical();  
00A6 9E00      00941         BCF     _INTCONbits, 7
00A8 00942 _00366_DS_:
               00943 ;       .line   927; brtos/BRTOS.c      if (USER_STACKED_BYTES < NUMBER_MIN_OF_STACKED_BYTES)
00A8 0E00      00944         MOVLW   0x00
00AA 5C00      00945         SUBWF   r0x07, W
00AC E100      00946         BNZ     _00413_DS_
00AE 0E38      00947         MOVLW   0x38
00B0 5C00      00948         SUBWF   r0x06, W
00B2 00949 _00413_DS_:
00B2 E200      00950         BC      _00370_DS_
00B4 0000      00951         BANKSEL _currentTask
               00952 ;       .line   929; brtos/BRTOS.c      if (currentTask)
00B6 5100      00953         MOVF    _currentTask, W, B
00B8 E000      00954         BZ      _00368_DS_
               00955 ;       .line   931; brtos/BRTOS.c      OSExitCritical();
00BA 8E00      00956         BSF     _INTCONbits, 7
00BC 00957 _00368_DS_:
               00958 ;       .line   932; brtos/BRTOS.c      return STACK_SIZE_TOO_SMALL;
00BC 0E02      00959         MOVLW   0x02
00BE D000      00960         BRA     _00396_DS_
00C0 00961 _00370_DS_:
               00962 ;       .line   935; brtos/BRTOS.c      if ((iStackAddress + USER_STACKED_BYTES) > HEAP_SIZE)
00C0 5000      00963         MOVF    r0x06, W
00C2 0000      00964         BANKSEL _iStackAddress
00C4 2500      00965         ADDWF   _iStackAddress, W, B
00C6 6E00      00966         MOVWF   r0x0a
00C8 5000      00967         MOVF    r0x07, W
00CA 0000      00968         BANKSEL (_iStackAddress + 1)
00CC 2100      00969         ADDWFC  (_iStackAddress + 1), W, B
00CE 6E00      00970         MOVWF   r0x0b
00D0 0E00      00971         MOVLW   0x00
00D2 5C00      00972         SUBWF   r0x0b, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D4 E100      00973         BNZ     _00414_DS_
00D6 0E81      00974         MOVLW   0x81
00D8 5C00      00975         SUBWF   r0x0a, W
00DA 00976 _00414_DS_:
00DA E300      00977         BNC     _00374_DS_
00DC 0000      00978         BANKSEL _currentTask
               00979 ;       .line   937; brtos/BRTOS.c      if (currentTask)
00DE 5100      00980         MOVF    _currentTask, W, B
00E0 E000      00981         BZ      _00372_DS_
               00982 ;       .line   939; brtos/BRTOS.c      OSExitCritical();
00E2 8E00      00983         BSF     _INTCONbits, 7
00E4 00984 _00372_DS_:
               00985 ;       .line   940; brtos/BRTOS.c      return NO_MEMORY;
00E4 0E01      00986         MOVLW   0x01
00E6 D000      00987         BRA     _00396_DS_
00E8 00988 _00374_DS_:
               00989 ;       .line   943; brtos/BRTOS.c      if (iPriority)
00E8 5000      00990         MOVF    r0x08, W
00EA E000      00991         BZ      _00386_DS_
               00992 ;       .line   945; brtos/BRTOS.c      if (iPriority > configMAX_TASK_PRIORITY)
00EC 0E10      00993         MOVLW   0x10
00EE 5C00      00994         SUBWF   r0x08, W
00F0 E300      00995         BNC     _00378_DS_
00F2 0000      00996         BANKSEL _currentTask
               00997 ;       .line   947; brtos/BRTOS.c      if (currentTask)
00F4 5100      00998         MOVF    _currentTask, W, B
00F6 E000      00999         BZ      _00376_DS_
               01000 ;       .line   949; brtos/BRTOS.c      OSExitCritical();        
00F8 8E00      01001         BSF     _INTCONbits, 7
00FA 01002 _00376_DS_:
               01003 ;       .line   950; brtos/BRTOS.c      return END_OF_AVAILABLE_PRIORITIES;
00FA 0E03      01004         MOVLW   0x03
00FC D000      01005         BRA     _00396_DS_
00FE 01006 _00378_DS_:
               01007 ;       .line   953; brtos/BRTOS.c      if (PriorityVector[iPriority] != EMPTY_PRIO)
00FE 0E00      01008         MOVLW   LOW(_PriorityVector)
0100 2400      01009         ADDWF   r0x08, W
0102 6E00      01010         MOVWF   r0x0a
0104 6A00      01011         CLRF    r0x0b
0106 0E00      01012         MOVLW   HIGH(_PriorityVector)
0108 2200      01013         ADDWFC  r0x0b, F
010A C000 FFE9 01014         MOVFF   r0x0a, FSR0L
010E C000 FFEA 01015         MOVFF   r0x0b, FSR0H
0112 CFEF F000 01016         MOVFF   INDF0, r0x0c
0116 5000      01017         MOVF    r0x0c, W
0118 0AFF      01018         XORLW   0xff
011A E000      01019         BZ      _00387_DS_
011C 01020 _00417_DS_:
011C 0000      01021         BANKSEL _currentTask
               01022 ;       .line   955; brtos/BRTOS.c      if (currentTask)
011E 5100      01023         MOVF    _currentTask, W, B
0120 E000      01024         BZ      _00380_DS_
               01025 ;       .line   957; brtos/BRTOS.c      OSExitCritical();        
0122 8E00      01026         BSF     _INTCONbits, 7
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0124 01027 _00380_DS_:
               01028 ;       .line   958; brtos/BRTOS.c      return BUSY_PRIORITY;
0124 0E04      01029         MOVLW   0x04
0126 D000      01030         BRA     _00396_DS_
0128 01031 _00386_DS_:
0128 0000      01032         BANKSEL _currentTask
               01033 ;       .line   963; brtos/BRTOS.c      if (currentTask)
012A 5100      01034         MOVF    _currentTask, W, B
012C E000      01035         BZ      _00384_DS_
               01036 ;       .line   965; brtos/BRTOS.c      OSExitCritical();
012E 8E00      01037         BSF     _INTCONbits, 7
0130 01038 _00384_DS_:
               01039 ;       .line   966; brtos/BRTOS.c      return CANNOT_ASSIGN_IDLE_TASK_PRIO;
0130 0E07      01040         MOVLW   0x07
0132 D000      01041         BRA     _00396_DS_
0134 01042 _00387_DS_:
0134 0000      01043         BANKSEL _NumberOfInstalledTasks
               01044 ;       .line   969; brtos/BRTOS.c      NumberOfInstalledTasks++;
0136 2B00      01045         INCF    _NumberOfInstalledTasks, F, B
               01046 ;       .line   972; brtos/BRTOS.c      for(i=0;i<NUMBER_OF_TASKS;i++)
0138 6A00      01047         CLRF    r0x0c
013A 6A00      01048         CLRF    r0x0d
013C 01049 _00390_DS_:
013C 0E07      01050         MOVLW   0x07
013E 5C00      01051         SUBWF   r0x0d, W
0140 B0D8      01052         BTFSC   STATUS, 0
0142 D000      01053         BRA     _00393_DS_
               01054 ;       .line   975; brtos/BRTOS.c      teste = teste<<i;
0144 0E01      01055         MOVLW   0x01
0146 6E00      01056         MOVWF   r0x0e
0148 0E00      01057         MOVLW   0x00
014A 6E00      01058         MOVWF   r0x0f
014C 0E00      01059         MOVLW   0x00
014E 6E00      01060         MOVWF   r0x10
0150 0E00      01061         MOVLW   0x00
0152 6E00      01062         MOVWF   r0x11
0154 5000      01063         MOVF    r0x0d, W
0156 E000      01064         BZ      _00419_DS_
0158 6CE8      01065         NEGF    WREG
015A 90D8      01066         BCF     STATUS, 0
015C 01067 _00420_DS_:
015C 3600      01068         RLCF    r0x0e, F
015E 3600      01069         RLCF    r0x0f, F
0160 3600      01070         RLCF    r0x10, F
0162 3600      01071         RLCF    r0x11, F
0164 0F01      01072         ADDLW   0x01
0166 E300      01073         BNC     _00420_DS_
0168 01074 _00419_DS_:
0168 0000      01075         BANKSEL _TaskAlloc
               01076 ;       .line   977; brtos/BRTOS.c      if (!(teste & TaskAlloc))
016A 5100      01077         MOVF    _TaskAlloc, W, B
016C 1400      01078         ANDWF   r0x0e, W
016E 6E00      01079         MOVWF   r0x12
0170 0000      01080         BANKSEL (_TaskAlloc + 1)
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0172 5100      01081         MOVF    (_TaskAlloc + 1), W, B
0174 1400      01082         ANDWF   r0x0f, W
0176 6E00      01083         MOVWF   r0x13
0178 0000      01084         BANKSEL (_TaskAlloc + 2)
017A 5100      01085         MOVF    (_TaskAlloc + 2), W, B
017C 1400      01086         ANDWF   r0x10, W
017E 6E00      01087         MOVWF   r0x14
0180 0000      01088         BANKSEL (_TaskAlloc + 3)
0182 5100      01089         MOVF    (_TaskAlloc + 3), W, B
0184 1400      01090         ANDWF   r0x11, W
0186 6E00      01091         MOVWF   r0x15
0188 5000      01092         MOVF    r0x12, W
018A 1000      01093         IORWF   r0x13, W
018C 1000      01094         IORWF   r0x14, W
018E 1000      01095         IORWF   r0x15, W
0190 E100      01096         BNZ     _00392_DS_
               01097 ;       .line   979; brtos/BRTOS.c      TaskNumber = i+1;
0192 2800      01098         INCF    r0x0c, W
0194 6E00      01099         MOVWF   r0x09
               01100 ;       .line   980; brtos/BRTOS.c      TaskAlloc = TaskAlloc | teste;
0196 5000      01101         MOVF    r0x0e, W
0198 0000      01102         BANKSEL _TaskAlloc
019A 1300      01103         IORWF   _TaskAlloc, F, B
019C 5000      01104         MOVF    r0x0f, W
019E 0000      01105         BANKSEL (_TaskAlloc + 1)
01A0 1300      01106         IORWF   (_TaskAlloc + 1), F, B
01A2 5000      01107         MOVF    r0x10, W
01A4 0000      01108         BANKSEL (_TaskAlloc + 2)
01A6 1300      01109         IORWF   (_TaskAlloc + 2), F, B
01A8 5000      01110         MOVF    r0x11, W
01AA 0000      01111         BANKSEL (_TaskAlloc + 3)
01AC 1300      01112         IORWF   (_TaskAlloc + 3), F, B
               01113 ;       .line   981; brtos/BRTOS.c      break;
01AE D000      01114         BRA     _00393_DS_
01B0 01115 _00392_DS_:
               01116 ;       .line   972; brtos/BRTOS.c      for(i=0;i<NUMBER_OF_TASKS;i++)
01B0 2A00      01117         INCF    r0x0d, F
01B2 C000 F000 01118         MOVFF   r0x0d, r0x0c
01B6 D000      01119         BRA     _00390_DS_
               01120 ; ;multiply lit val:0x10 by variable r0x09 and store in r0x0c
               01121 ; ;Unrolled 8 X 8 multiplication
               01122 ; ;FIXME: the function does not support result==WREG
01B8 01123 _00393_DS_:
               01124 ;       .line   985; brtos/BRTOS.c      Task = &ContextTask[TaskNumber];   
01B8 5000      01125         MOVF    r0x09, W
01BA 0D10      01126         MULLW   0x10
01BC CFF3 F000 01127         MOVFF   PRODL, r0x0c
01C0 6A00      01128         CLRF    r0x0d
01C2 0E00      01129         MOVLW   LOW(_ContextTask)
01C4 2600      01130         ADDWF   r0x0c, F
01C6 0E00      01131         MOVLW   HIGH(_ContextTask)
01C8 2200      01132         ADDWFC  r0x0d, F
01CA 5000      01133         MOVF    r0x0d, W
01CC 6E00      01134         MOVWF   r0x0d
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01CE 5000      01135         MOVF    r0x0c, W
01D0 6E00      01136         MOVWF   r0x0c
01D2 0E80      01137         MOVLW   0x80
01D4 6E00      01138         MOVWF   r0x0e
               01139 ;       .line   987; brtos/BRTOS.c      Task->TaskName = TaskName;
01D6 C000 FFE5 01140         MOVFF   r0x03, POSTDEC1
01DA C000 FFF4 01141         MOVFF   r0x04, PRODH
01DE C000 FFF6 01142         MOVFF   r0x05, TBLPTRL
01E2 C000 FFE9 01143         MOVFF   r0x0c, FSR0L
01E6 C000 FFF3 01144         MOVFF   r0x0d, PRODL
01EA 5000      01145         MOVF    r0x0e, W
01EC EC00 F000 01146         CALL    __gptrput3
               01147 ;       .line   992; brtos/BRTOS.c      Task->StackPoint = StackAddress + NUMBER_MIN_OF_STACKED_BYTES;
01F0 5000      01148         MOVF    r0x0c, W
01F2 0F03      01149         ADDLW   0x03
01F4 6E00      01150         MOVWF   r0x03
01F6 0E00      01151         MOVLW   0x00
01F8 2000      01152         ADDWFC  r0x0d, W
01FA 6E00      01153         MOVWF   r0x04
01FC 0E00      01154         MOVLW   0x00
01FE 2000      01155         ADDWFC  r0x0e, W
0200 6E00      01156         MOVWF   r0x05
0202 0000      01157         BANKSEL _StackAddress
0204 5100      01158         MOVF    _StackAddress, W, B
0206 0F38      01159         ADDLW   0x38
0208 6E00      01160         MOVWF   r0x0f
020A 0E00      01161         MOVLW   0x00
020C 0000      01162         BANKSEL (_StackAddress + 1)
020E 2100      01163         ADDWFC  (_StackAddress + 1), W, B
0210 6E00      01164         MOVWF   r0x10
0212 C000 FFE5 01165         MOVFF   r0x0f, POSTDEC1
0216 C000 FFF4 01166         MOVFF   r0x10, PRODH
021A C000 FFE9 01167         MOVFF   r0x03, FSR0L
021E C000 FFF3 01168         MOVFF   r0x04, PRODL
0222 5000      01169         MOVF    r0x05, W
0224 EC00 F000 01170         CALL    __gptrput2
               01171 ;       .line   999; brtos/BRTOS.c      Task->StackInit = StackAddress;
0228 5000      01172         MOVF    r0x0c, W
022A 0F05      01173         ADDLW   0x05
022C 6E00      01174         MOVWF   r0x03
022E 0E00      01175         MOVLW   0x00
0230 2000      01176         ADDWFC  r0x0d, W
0232 6E00      01177         MOVWF   r0x04
0234 0E00      01178         MOVLW   0x00
0236 2000      01179         ADDWFC  r0x0e, W
0238 6E00      01180         MOVWF   r0x05
023A C000 FFE5 01181         MOVFF   _StackAddress, POSTDEC1
023E C000 FFF4 01182         MOVFF   (_StackAddress + 1), PRODH
0242 C000 FFE9 01183         MOVFF   r0x03, FSR0L
0246 C000 FFF3 01184         MOVFF   r0x04, PRODL
024A 5000      01185         MOVF    r0x05, W
024C EC00 F000 01186         CALL    __gptrput2
               01187 ;       .line   1006; brtos/BRTOS.c     Task->Priority = iPriority;
0250 5000      01188         MOVF    r0x0c, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0252 0F09      01189         ADDLW   0x09
0254 6E00      01190         MOVWF   r0x03
0256 0E00      01191         MOVLW   0x00
0258 2000      01192         ADDWFC  r0x0d, W
025A 6E00      01193         MOVWF   r0x04
025C 0E00      01194         MOVLW   0x00
025E 2000      01195         ADDWFC  r0x0e, W
0260 6E00      01196         MOVWF   r0x05
0262 C000 FFE5 01197         MOVFF   r0x08, POSTDEC1
0266 C000 FFE9 01198         MOVFF   r0x03, FSR0L
026A C000 FFF3 01199         MOVFF   r0x04, PRODL
026E 5000      01200         MOVF    r0x05, W
0270 EC00 F000 01201         CALL    __gptrput1
               01202 ;       .line   1009; brtos/BRTOS.c     PriorityVector[iPriority] = TaskNumber;
0274 C000 FFE9 01203         MOVFF   r0x0a, FSR0L
0278 C000 FFEA 01204         MOVFF   r0x0b, FSR0H
027C C000 FFEF 01205         MOVFF   r0x09, INDF0
               01206 ;       .line   1013; brtos/BRTOS.c     CreateVirtualStack(FctPtr, USER_STACKED_BYTES);   
0280 5000      01207         MOVF    r0x07, W
0282 6EE5      01208         MOVWF   POSTDEC1
0284 5000      01209         MOVF    r0x06, W
0286 6EE5      01210         MOVWF   POSTDEC1
0288 5000      01211         MOVF    r0x02, W
028A 6EE5      01212         MOVWF   POSTDEC1
028C 5000      01213         MOVF    r0x01, W
028E 6EE5      01214         MOVWF   POSTDEC1
0290 5000      01215         MOVF    r0x00, W
0292 6EE5      01216         MOVWF   POSTDEC1
0294 EC00 F000 01217         CALL    _CreateVirtualStack
0298 0E05      01218         MOVLW   0x05
029A 26E1      01219         ADDWF   FSR1L, F
029C B0D8      01220         BTFSC   STATUS, 0
029E 2AE2      01221         INCF    FSR1H, F
               01222 ;       .line   1016; brtos/BRTOS.c     iStackAddress = iStackAddress + USER_STACKED_BYTES;
02A0 5000      01223         MOVF    r0x06, W
02A2 0000      01224         BANKSEL _iStackAddress
02A4 2700      01225         ADDWF   _iStackAddress, F, B
02A6 5000      01226         MOVF    r0x07, W
02A8 0000      01227         BANKSEL (_iStackAddress + 1)
02AA 2300      01228         ADDWFC  (_iStackAddress + 1), F, B
               01229 ;       .line   1019; brtos/BRTOS.c     StackAddress = StackAddress + USER_STACKED_BYTES;
02AC 5000      01230         MOVF    r0x06, W
02AE 0000      01231         BANKSEL _StackAddress
02B0 2700      01232         ADDWF   _StackAddress, F, B
02B2 5000      01233         MOVF    r0x07, W
02B4 0000      01234         BANKSEL (_StackAddress + 1)
02B6 2300      01235         ADDWFC  (_StackAddress + 1), F, B
               01236 ;       .line   1022; brtos/BRTOS.c     Task->TimeToWait = NO_TIMEOUT;
02B8 5000      01237         MOVF    r0x0c, W
02BA 0F07      01238         ADDLW   0x07
02BC 6E00      01239         MOVWF   r0x00
02BE 0E00      01240         MOVLW   0x00
02C0 2000      01241         ADDWFC  r0x0d, W
02C2 6E00      01242         MOVWF   r0x01
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02C4 0E00      01243         MOVLW   0x00
02C6 2000      01244         ADDWFC  r0x0e, W
02C8 6E00      01245         MOVWF   r0x02
02CA 0EE8      01246         MOVLW   0xe8
02CC 6EE5      01247         MOVWF   POSTDEC1
02CE 0EFD      01248         MOVLW   0xfd
02D0 6EF4      01249         MOVWF   PRODH
02D2 C000 FFE9 01250         MOVFF   r0x00, FSR0L
02D6 C000 FFF3 01251         MOVFF   r0x01, PRODL
02DA 5000      01252         MOVF    r0x02, W
02DC EC00 F000 01253         CALL    __gptrput2
               01254 ;       .line   1023; brtos/BRTOS.c     Task->Next     =  NULL;
02E0 5000      01255         MOVF    r0x0c, W
02E2 0F0A      01256         ADDLW   0x0a
02E4 6E00      01257         MOVWF   r0x00
02E6 0E00      01258         MOVLW   0x00
02E8 2000      01259         ADDWFC  r0x0d, W
02EA 6E00      01260         MOVWF   r0x01
02EC 0E00      01261         MOVLW   0x00
02EE 2000      01262         ADDWFC  r0x0e, W
02F0 6E00      01263         MOVWF   r0x02
02F2 0E00      01264         MOVLW   0x00
02F4 6EE5      01265         MOVWF   POSTDEC1
02F6 0E00      01266         MOVLW   0x00
02F8 6EF4      01267         MOVWF   PRODH
02FA 0E00      01268         MOVLW   0x00
02FC 6EF6      01269         MOVWF   TBLPTRL
02FE C000 FFE9 01270         MOVFF   r0x00, FSR0L
0302 C000 FFF3 01271         MOVFF   r0x01, PRODL
0306 5000      01272         MOVF    r0x02, W
0308 EC00 F000 01273         CALL    __gptrput3
               01274 ;       .line   1024; brtos/BRTOS.c     Task->Previous =  NULL;
030C 0E0D      01275         MOVLW   0x0d
030E 2600      01276         ADDWF   r0x0c, F
0310 0E00      01277         MOVLW   0x00
0312 2200      01278         ADDWFC  r0x0d, F
0314 0E00      01279         MOVLW   0x00
0316 2200      01280         ADDWFC  r0x0e, F
0318 0E00      01281         MOVLW   0x00
031A 6EE5      01282         MOVWF   POSTDEC1
031C 0E00      01283         MOVLW   0x00
031E 6EF4      01284         MOVWF   PRODH
0320 0E00      01285         MOVLW   0x00
0322 6EF6      01286         MOVWF   TBLPTRL
0324 C000 FFE9 01287         MOVFF   r0x0c, FSR0L
0328 C000 FFF3 01288         MOVFF   r0x0d, PRODL
032C 5000      01289         MOVF    r0x0e, W
032E EC00 F000 01290         CALL    __gptrput3
               01291 ; ;multiply lit val:0x02 by variable r0x08 and store in r0x08
               01292 ; ;Unrolled 8 X 8 multiplication
               01293 ; ;FIXME: the function does not support result==WREG
               01294 ;       .line   1031; brtos/BRTOS.c     OSReadyList = OSReadyList | (PriorityMask[iPriority]);
0332 90D8      01295         BCF     STATUS, 0
0334 3600      01296         RLCF    r0x08, F
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0336 6A00      01297         CLRF    r0x00
0338 6A00      01298         CLRF    r0x01
033A 0E00      01299         MOVLW   LOW(_PriorityMask)
033C 2600      01300         ADDWF   r0x08, F
033E 0E00      01301         MOVLW   HIGH(_PriorityMask)
0340 2200      01302         ADDWFC  r0x00, F
0342 0E00      01303         MOVLW   UPPER(_PriorityMask)
0344 2200      01304         ADDWFC  r0x01, F
0346 C000 FFF6 01305         MOVFF   r0x08, TBLPTRL
034A C000 FFF7 01306         MOVFF   r0x00, TBLPTRH
034E C000 FFF8 01307         MOVFF   r0x01, TBLPTRU
0352 0009      01308         TBLRD*+ 
0354 CFF5 F000 01309         MOVFF   TABLAT, r0x08
0358 0009      01310         TBLRD*+ 
035A CFF5 F000 01311         MOVFF   TABLAT, r0x00
035E 5000      01312         MOVF    r0x08, W
0360 0000      01313         BANKSEL _OSReadyList
0362 1300      01314         IORWF   _OSReadyList, F, B
0364 5000      01315         MOVF    r0x00, W
0366 0000      01316         BANKSEL (_OSReadyList + 1)
0368 1300      01317         IORWF   (_OSReadyList + 1), F, B
036A 0000      01318         BANKSEL _currentTask
               01319 ;       .line   1033; brtos/BRTOS.c     if (currentTask)
036C 5100      01320         MOVF    _currentTask, W, B
036E E000      01321         BZ      _00395_DS_
               01322 ;       .line   1035; brtos/BRTOS.c     OSExitCritical();   
0370 8E00      01323         BSF     _INTCONbits, 7
0372 01324 _00395_DS_:
               01325 ;       .line   1037; brtos/BRTOS.c     return OK;
0372 6AE8      01326         CLRF    WREG
0374 01327 _00396_DS_:
0374 CFE4 F000 01328         MOVFF   PREINC1, r0x15
0378 CFE4 F000 01329         MOVFF   PREINC1, r0x14
037C CFE4 F000 01330         MOVFF   PREINC1, r0x13
0380 CFE4 F000 01331         MOVFF   PREINC1, r0x12
0384 CFE4 F000 01332         MOVFF   PREINC1, r0x11
0388 CFE4 F000 01333         MOVFF   PREINC1, r0x10
038C CFE4 F000 01334         MOVFF   PREINC1, r0x0f
0390 CFE4 F000 01335         MOVFF   PREINC1, r0x0e
0394 CFE4 F000 01336         MOVFF   PREINC1, r0x0d
0398 CFE4 F000 01337         MOVFF   PREINC1, r0x0c
039C CFE4 F000 01338         MOVFF   PREINC1, r0x0b
03A0 CFE4 F000 01339         MOVFF   PREINC1, r0x0a
03A4 CFE4 F000 01340         MOVFF   PREINC1, r0x09
03A8 CFE4 F000 01341         MOVFF   PREINC1, r0x08
03AC CFE4 F000 01342         MOVFF   PREINC1, r0x07
03B0 CFE4 F000 01343         MOVFF   PREINC1, r0x06
03B4 CFE4 F000 01344         MOVFF   PREINC1, r0x05
03B8 CFE4 F000 01345         MOVFF   PREINC1, r0x04
03BC CFE4 F000 01346         MOVFF   PREINC1, r0x03
03C0 CFE4 F000 01347         MOVFF   PREINC1, r0x02
03C4 CFE4 F000 01348         MOVFF   PREINC1, r0x01
03C8 CFE4 F000 01349         MOVFF   PREINC1, r0x00
03CC CFE4 FFD9 01350         MOVFF   PREINC1, FSR2L
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03D0 CFE4 FFDA 01351         MOVFF   PREINC1, FSR2H
03D4 0012      01352         RETURN  
               01353 
               01354 ; ; Starting pCode block
               01355 S_BRTOS__Idle   code
0000 01356 _Idle:
               01357 ;       .line   873; brtos/BRTOS.c      void Idle(void)
0000 CFDA FFE5 01358         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01359         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01360         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01361         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01362         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01363         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01364         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 01365         MOVFF   r0x03, POSTDEC1
0020 01366 _00358_DS_:
               01367 ;       .line   882; brtos/BRTOS.c      OSDutyTmp = TIMER_COUNTER;
0020 C000 F000 01368         MOVFF   _TMR1H, r0x00
0024 6A00      01369         CLRF    r0x01
0026 5000      01370         MOVF    r0x00, W
0028 6E00      01371         MOVWF   r0x03
002A 6A00      01372         CLRF    r0x02
002C C000 F000 01373         MOVFF   _TMR1L, r0x00
0030 6A00      01374         CLRF    r0x01
0032 5000      01375         MOVF    r0x00, W
0034 2600      01376         ADDWF   r0x02, F
0036 5000      01377         MOVF    r0x01, W
0038 2200      01378         ADDWFC  r0x03, F
003A C000 F000 01379         MOVFF   r0x02, _OSDutyTmp
003E C000 F000 01380         MOVFF   r0x03, (_OSDutyTmp + 1)
0042 6AE8      01381         CLRF    WREG
0044 BE00      01382         BTFSC   r0x03, 7
0046 0EFF      01383         MOVLW   0xff
0048 0000      01384         BANKSEL (_OSDutyTmp + 2)
004A 6F00      01385         MOVWF   (_OSDutyTmp + 2), B
004C 0000      01386         BANKSEL (_OSDutyTmp + 3)
004E 6F00      01387         MOVWF   (_OSDutyTmp + 3), B
0050 0003      01388         SLEEP 
0052 D000      01389         BRA     _00358_DS_
0054 CFE4 F000 01390         MOVFF   PREINC1, r0x03
0058 CFE4 F000 01391         MOVFF   PREINC1, r0x02
005C CFE4 F000 01392         MOVFF   PREINC1, r0x01
0060 CFE4 F000 01393         MOVFF   PREINC1, r0x00
0064 CFE4 FFD9 01394         MOVFF   PREINC1, FSR2L
0068 CFE4 FFDA 01395         MOVFF   PREINC1, FSR2H
006C 0012      01396         RETURN  
               01397 
               01398 ; ; Starting pCode block
               01399 S_BRTOS__UnBlockMultipleTask    code
0000 01400 _UnBlockMultipleTask:
               01401 ;       .line   817; brtos/BRTOS.c      INT8U UnBlockMultipleTask(INT8U TaskStart, INT8U TaskNumber)
0000 CFDA FFE5 01402         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01403         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01404         MOVFF   FSR1H, FSR2H
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C CFE1 FFD9 01405         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01406         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01407         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01408         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 01409         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 01410         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 01411         MOVFF   r0x05, POSTDEC1
0028 0E03      01412         MOVLW   0x03
002A CFDB F000 01413         MOVFF   PLUSW2, r0x00
002E 0E04      01414         MOVLW   0x04
0030 CFDB F000 01415         MOVFF   PLUSW2, r0x01
0034 0000      01416         BANKSEL _iNesting
               01417 ;       .line   824; brtos/BRTOS.c      if (iNesting > 0) {                                // See if caller is an interrupt
0036 5100      01418         MOVF    _iNesting, W, B
0038 E000      01419         BZ      _00330_DS_
               01420 ;       .line   825; brtos/BRTOS.c      return(IRQ_PEND_ERR);                           // Can't be blocked by interrupt
003A 0E02      01421         MOVLW   0x02
003C D000      01422         BRA     _00341_DS_
003E 01423 _00330_DS_:
003E 0000      01424         BANKSEL _currentTask
               01425 ;       .line   829; brtos/BRTOS.c      if (currentTask)
0040 5100      01426         MOVF    _currentTask, W, B
0042 E000      01427         BZ      _00332_DS_
               01428 ;       .line   830; brtos/BRTOS.c      OSEnterCritical();
0044 9E00      01429         BCF     _INTCONbits, 7
0046 01430 _00332_DS_:
               01431 ;       .line   832; brtos/BRTOS.c      TaskFinish = (INT8U)(TaskStart + TaskNumber);
0046 5000      01432         MOVF    r0x00, W
0048 2600      01433         ADDWF   r0x01, F
               01434 ;       .line   834; brtos/BRTOS.c      for (iTask = TaskStart; iTask <TaskFinish; iTask++)
004A C000 F000 01435         MOVFF   r0x00, r0x02
               01436 ; ;multiply lit val:0x10 by variable r0x00 and store in r0x00
               01437 ; ;Unrolled 8 X 8 multiplication
               01438 ; ;FIXME: the function does not support result==WREG
004E 5000      01439         MOVF    r0x00, W
0050 0D10      01440         MULLW   0x10
0052 CFF3 F000 01441         MOVFF   PRODL, r0x00
0056 01442 _00337_DS_:
0056 5000      01443         MOVF    r0x01, W
0058 5C00      01444         SUBWF   r0x02, W
005A E200      01445         BC      _00340_DS_
               01446 ;       .line   837; brtos/BRTOS.c      if (iTask != currentTask)
005C 5000      01447         MOVF    r0x02, W
005E 0000      01448         BANKSEL _currentTask
0060 1900      01449         XORWF   _currentTask, W, B
0062 E000      01450         BZ      _00339_DS_
               01451 ;       .line   839; brtos/BRTOS.c      iPriority = ContextTask[iTask].Priority;
0064 0E00      01452         MOVLW   LOW(_ContextTask)
0066 2400      01453         ADDWF   r0x00, W
0068 6E00      01454         MOVWF   r0x03
006A 6A00      01455         CLRF    r0x04
006C 0E00      01456         MOVLW   HIGH(_ContextTask)
006E 2200      01457         ADDWFC  r0x04, F
0070 0E09      01458         MOVLW   0x09
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0072 2600      01459         ADDWF   r0x03, F
0074 B0D8      01460         BTFSC   STATUS, 0
0076 2A00      01461         INCF    r0x04, F
0078 C000 FFE9 01462         MOVFF   r0x03, FSR0L
007C C000 FFEA 01463         MOVFF   r0x04, FSR0H
0080 CFEF F000 01464         MOVFF   INDF0, r0x03
               01465 ; ;multiply lit val:0x02 by variable r0x03 and store in r0x03
               01466 ; ;Unrolled 8 X 8 multiplication
               01467 ; ;FIXME: the function does not support result==WREG
               01468 ;       .line   845; brtos/BRTOS.c      OSBlockedList = OSBlockedList | (PriorityMask[iPriority]);
0084 90D8      01469         BCF     STATUS, 0
0086 3600      01470         RLCF    r0x03, F
0088 6A00      01471         CLRF    r0x04
008A 6A00      01472         CLRF    r0x05
008C 0E00      01473         MOVLW   LOW(_PriorityMask)
008E 2600      01474         ADDWF   r0x03, F
0090 0E00      01475         MOVLW   HIGH(_PriorityMask)
0092 2200      01476         ADDWFC  r0x04, F
0094 0E00      01477         MOVLW   UPPER(_PriorityMask)
0096 2200      01478         ADDWFC  r0x05, F
0098 C000 FFF6 01479         MOVFF   r0x03, TBLPTRL
009C C000 FFF7 01480         MOVFF   r0x04, TBLPTRH
00A0 C000 FFF8 01481         MOVFF   r0x05, TBLPTRU
00A4 0009      01482         TBLRD*+ 
00A6 CFF5 F000 01483         MOVFF   TABLAT, r0x03
00AA 0009      01484         TBLRD*+ 
00AC CFF5 F000 01485         MOVFF   TABLAT, r0x04
00B0 5000      01486         MOVF    r0x03, W
00B2 0000      01487         BANKSEL _OSBlockedList
00B4 1300      01488         IORWF   _OSBlockedList, F, B
00B6 5000      01489         MOVF    r0x04, W
00B8 0000      01490         BANKSEL (_OSBlockedList + 1)
00BA 1300      01491         IORWF   (_OSBlockedList + 1), F, B
00BC 01492 _00339_DS_:
               01493 ;       .line   834; brtos/BRTOS.c      for (iTask = TaskStart; iTask <TaskFinish; iTask++)
00BC 0E10      01494         MOVLW   0x10
00BE 2600      01495         ADDWF   r0x00, F
00C0 2A00      01496         INCF    r0x02, F
00C2 D000      01497         BRA     _00337_DS_
00C4 01498 _00340_DS_:
00C4 0000      01499         BANKSEL _currentTask
               01500 ;       .line   850; brtos/BRTOS.c      if (currentTask)
00C6 5100      01501         MOVF    _currentTask, W, B
00C8 E000      01502         BZ      _00336_DS_
               01503 ;       .line   851; brtos/BRTOS.c      OSExitCritical();
00CA 8E00      01504         BSF     _INTCONbits, 7
00CC 01505 _00336_DS_:
               01506 ;       .line   853; brtos/BRTOS.c      return OK;
00CC 6AE8      01507         CLRF    WREG
00CE 01508 _00341_DS_:
00CE CFE4 F000 01509         MOVFF   PREINC1, r0x05
00D2 CFE4 F000 01510         MOVFF   PREINC1, r0x04
00D6 CFE4 F000 01511         MOVFF   PREINC1, r0x03
00DA CFE4 F000 01512         MOVFF   PREINC1, r0x02
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE CFE4 F000 01513         MOVFF   PREINC1, r0x01
00E2 CFE4 F000 01514         MOVFF   PREINC1, r0x00
00E6 CFE4 FFD9 01515         MOVFF   PREINC1, FSR2L
00EA CFE4 FFDA 01516         MOVFF   PREINC1, FSR2H
00EE 0012      01517         RETURN  
               01518 
               01519 ; ; Starting pCode block
               01520 S_BRTOS__BlockMultipleTask      code
0000 01521 _BlockMultipleTask:
               01522 ;       .line   765; brtos/BRTOS.c      INT8U BlockMultipleTask(INT8U TaskStart, INT8U TaskNumber)
0000 CFDA FFE5 01523         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01524         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01525         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01526         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01527         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01528         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01529         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 01530         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 01531         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 01532         MOVFF   r0x05, POSTDEC1
0028 0E03      01533         MOVLW   0x03
002A CFDB F000 01534         MOVFF   PLUSW2, r0x00
002E 0E04      01535         MOVLW   0x04
0030 CFDB F000 01536         MOVFF   PLUSW2, r0x01
0034 0000      01537         BANKSEL _iNesting
               01538 ;       .line   772; brtos/BRTOS.c      if (iNesting > 0) {                                // See if caller is an interrupt
0036 5100      01539         MOVF    _iNesting, W, B
0038 E000      01540         BZ      _00302_DS_
               01541 ;       .line   773; brtos/BRTOS.c      return(IRQ_PEND_ERR);                           // Can't be blocked by interrupt
003A 0E02      01542         MOVLW   0x02
003C D000      01543         BRA     _00313_DS_
003E 01544 _00302_DS_:
003E 0000      01545         BANKSEL _currentTask
               01546 ;       .line   777; brtos/BRTOS.c      if (currentTask)
0040 5100      01547         MOVF    _currentTask, W, B
0042 E000      01548         BZ      _00304_DS_
               01549 ;       .line   778; brtos/BRTOS.c      OSEnterCritical();
0044 9E00      01550         BCF     _INTCONbits, 7
0046 01551 _00304_DS_:
               01552 ;       .line   780; brtos/BRTOS.c      TaskFinish = (INT8U)(TaskStart + TaskNumber);
0046 5000      01553         MOVF    r0x00, W
0048 2600      01554         ADDWF   r0x01, F
               01555 ;       .line   782; brtos/BRTOS.c      for (iTask = TaskStart; iTask <TaskFinish; iTask++)
004A C000 F000 01556         MOVFF   r0x00, r0x02
               01557 ; ;multiply lit val:0x10 by variable r0x00 and store in r0x00
               01558 ; ;Unrolled 8 X 8 multiplication
               01559 ; ;FIXME: the function does not support result==WREG
004E 5000      01560         MOVF    r0x00, W
0050 0D10      01561         MULLW   0x10
0052 CFF3 F000 01562         MOVFF   PRODL, r0x00
0056 01563 _00309_DS_:
0056 5000      01564         MOVF    r0x01, W
0058 5C00      01565         SUBWF   r0x02, W
005A E200      01566         BC      _00312_DS_
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01567 ;       .line   784; brtos/BRTOS.c      if (iTask != currentTask)
005C 5000      01568         MOVF    r0x02, W
005E 0000      01569         BANKSEL _currentTask
0060 1900      01570         XORWF   _currentTask, W, B
0062 E000      01571         BZ      _00311_DS_
               01572 ;       .line   790; brtos/BRTOS.c      iPriority = ContextTask[iTask].Priority;   
0064 0E00      01573         MOVLW   LOW(_ContextTask)
0066 2400      01574         ADDWF   r0x00, W
0068 6E00      01575         MOVWF   r0x03
006A 6A00      01576         CLRF    r0x04
006C 0E00      01577         MOVLW   HIGH(_ContextTask)
006E 2200      01578         ADDWFC  r0x04, F
0070 0E09      01579         MOVLW   0x09
0072 2600      01580         ADDWF   r0x03, F
0074 B0D8      01581         BTFSC   STATUS, 0
0076 2A00      01582         INCF    r0x04, F
0078 C000 FFE9 01583         MOVFF   r0x03, FSR0L
007C C000 FFEA 01584         MOVFF   r0x04, FSR0H
0080 CFEF F000 01585         MOVFF   INDF0, r0x03
               01586 ; ;multiply lit val:0x02 by variable r0x03 and store in r0x03
               01587 ; ;Unrolled 8 X 8 multiplication
               01588 ; ;FIXME: the function does not support result==WREG
               01589 ;       .line   792; brtos/BRTOS.c      OSBlockedList = OSBlockedList & ~(PriorityMask[iPriority]);
0084 90D8      01590         BCF     STATUS, 0
0086 3600      01591         RLCF    r0x03, F
0088 6A00      01592         CLRF    r0x04
008A 6A00      01593         CLRF    r0x05
008C 0E00      01594         MOVLW   LOW(_PriorityMask)
008E 2600      01595         ADDWF   r0x03, F
0090 0E00      01596         MOVLW   HIGH(_PriorityMask)
0092 2200      01597         ADDWFC  r0x04, F
0094 0E00      01598         MOVLW   UPPER(_PriorityMask)
0096 2200      01599         ADDWFC  r0x05, F
0098 C000 FFF6 01600         MOVFF   r0x03, TBLPTRL
009C C000 FFF7 01601         MOVFF   r0x04, TBLPTRH
00A0 C000 FFF8 01602         MOVFF   r0x05, TBLPTRU
00A4 0009      01603         TBLRD*+ 
00A6 CFF5 F000 01604         MOVFF   TABLAT, r0x03
00AA 0009      01605         TBLRD*+ 
00AC CFF5 F000 01606         MOVFF   TABLAT, r0x04
00B0 1E00      01607         COMF    r0x03, F
00B2 1E00      01608         COMF    r0x04, F
00B4 5000      01609         MOVF    r0x03, W
00B6 0000      01610         BANKSEL _OSBlockedList
00B8 1700      01611         ANDWF   _OSBlockedList, F, B
00BA 5000      01612         MOVF    r0x04, W
00BC 0000      01613         BANKSEL (_OSBlockedList + 1)
00BE 1700      01614         ANDWF   (_OSBlockedList + 1), F, B
00C0 01615 _00311_DS_:
               01616 ;       .line   782; brtos/BRTOS.c      for (iTask = TaskStart; iTask <TaskFinish; iTask++)
00C0 0E10      01617         MOVLW   0x10
00C2 2600      01618         ADDWF   r0x00, F
00C4 2A00      01619         INCF    r0x02, F
00C6 D000      01620         BRA     _00309_DS_
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C8 01621 _00312_DS_:
00C8 0000      01622         BANKSEL _currentTask
               01623 ;       .line   797; brtos/BRTOS.c      if (currentTask)
00CA 5100      01624         MOVF    _currentTask, W, B
00CC E000      01625         BZ      _00308_DS_
               01626 ;       .line   798; brtos/BRTOS.c      OSExitCritical();
00CE 8E00      01627         BSF     _INTCONbits, 7
00D0 01628 _00308_DS_:
               01629 ;       .line   800; brtos/BRTOS.c      return OK;
00D0 6AE8      01630         CLRF    WREG
00D2 01631 _00313_DS_:
00D2 CFE4 F000 01632         MOVFF   PREINC1, r0x05
00D6 CFE4 F000 01633         MOVFF   PREINC1, r0x04
00DA CFE4 F000 01634         MOVFF   PREINC1, r0x03
00DE CFE4 F000 01635         MOVFF   PREINC1, r0x02
00E2 CFE4 F000 01636         MOVFF   PREINC1, r0x01
00E6 CFE4 F000 01637         MOVFF   PREINC1, r0x00
00EA CFE4 FFD9 01638         MOVFF   PREINC1, FSR2L
00EE CFE4 FFDA 01639         MOVFF   PREINC1, FSR2H
00F2 0012      01640         RETURN  
               01641 
               01642 ; ; Starting pCode block
               01643 S_BRTOS__UnBlockTask    code
0000 01644 _UnBlockTask:
               01645 ;       .line   712; brtos/BRTOS.c      INT8U UnBlockTask(INT8U iTaskNumber)
0000 CFDA FFE5 01646         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01647         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01648         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01649         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01650         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01651         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01652         MOVFF   r0x02, POSTDEC1
001C 0E03      01653         MOVLW   0x03
001E CFDB F000 01654         MOVFF   PLUSW2, r0x00
0022 0000      01655         BANKSEL _iNesting
               01656 ;       .line   719; brtos/BRTOS.c      if (!iNesting)
0024 5100      01657         MOVF    _iNesting, W, B
0026 E100      01658         BNZ     _00289_DS_
               01659 ;       .line   721; brtos/BRTOS.c      OSEnterCritical();
0028 9E00      01660         BCF     _INTCONbits, 7
               01661 ; ;multiply lit val:0x10 by variable r0x00 and store in r0x00
               01662 ; ;Unrolled 8 X 8 multiplication
               01663 ; ;FIXME: the function does not support result==WREG
002A 01664 _00289_DS_:
               01665 ;       .line   728; brtos/BRTOS.c      iPriority = ContextTask[iTaskNumber].Priority;
002A 5000      01666         MOVF    r0x00, W
002C 0D10      01667         MULLW   0x10
002E CFF3 F000 01668         MOVFF   PRODL, r0x00
0032 6A00      01669         CLRF    r0x01
0034 0E00      01670         MOVLW   LOW(_ContextTask)
0036 2600      01671         ADDWF   r0x00, F
0038 0E00      01672         MOVLW   HIGH(_ContextTask)
003A 2200      01673         ADDWFC  r0x01, F
003C 0E09      01674         MOVLW   0x09
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003E 2600      01675         ADDWF   r0x00, F
0040 B0D8      01676         BTFSC   STATUS, 0
0042 2A00      01677         INCF    r0x01, F
0044 C000 FFE9 01678         MOVFF   r0x00, FSR0L
0048 C000 FFEA 01679         MOVFF   r0x01, FSR0H
004C CFEF F000 01680         MOVFF   INDF0, r0x00
               01681 ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
               01682 ; ;Unrolled 8 X 8 multiplication
               01683 ; ;FIXME: the function does not support result==WREG
               01684 ;       .line   730; brtos/BRTOS.c      OSBlockedList = OSBlockedList | (PriorityMask[iPriority]);
0050 90D8      01685         BCF     STATUS, 0
0052 3600      01686         RLCF    r0x00, F
0054 6A00      01687         CLRF    r0x01
0056 6A00      01688         CLRF    r0x02
0058 0E00      01689         MOVLW   LOW(_PriorityMask)
005A 2600      01690         ADDWF   r0x00, F
005C 0E00      01691         MOVLW   HIGH(_PriorityMask)
005E 2200      01692         ADDWFC  r0x01, F
0060 0E00      01693         MOVLW   UPPER(_PriorityMask)
0062 2200      01694         ADDWFC  r0x02, F
0064 C000 FFF6 01695         MOVFF   r0x00, TBLPTRL
0068 C000 FFF7 01696         MOVFF   r0x01, TBLPTRH
006C C000 FFF8 01697         MOVFF   r0x02, TBLPTRU
0070 0009      01698         TBLRD*+ 
0072 CFF5 F000 01699         MOVFF   TABLAT, r0x00
0076 0009      01700         TBLRD*+ 
0078 CFF5 F000 01701         MOVFF   TABLAT, r0x01
007C 5000      01702         MOVF    r0x00, W
007E 0000      01703         BANKSEL _OSBlockedList
0080 1300      01704         IORWF   _OSBlockedList, F, B
0082 5000      01705         MOVF    r0x01, W
0084 0000      01706         BANKSEL (_OSBlockedList + 1)
0086 1300      01707         IORWF   (_OSBlockedList + 1), F, B
0088 0000      01708         BANKSEL _currentTask
               01709 ;       .line   733; brtos/BRTOS.c      if (currentTask)
008A 5100      01710         MOVF    _currentTask, W, B
008C E000      01711         BZ      _00293_DS_
008E 0000      01712         BANKSEL _iNesting
               01713 ;       .line   735; brtos/BRTOS.c      if (!iNesting)
0090 5100      01714         MOVF    _iNesting, W, B
0092 E100      01715         BNZ     _00293_DS_
               01716 ;       .line   737; brtos/BRTOS.c      ChangeContext();
0094 EC00 F000 01717         CALL    _SwitchContext
0098 01718 _00293_DS_:
0098 0000      01719         BANKSEL _iNesting
               01720 ;       .line   743; brtos/BRTOS.c      if (!iNesting)
009A 5100      01721         MOVF    _iNesting, W, B
009C E100      01722         BNZ     _00295_DS_
               01723 ;       .line   745; brtos/BRTOS.c      OSExitCritical();
009E 8E00      01724         BSF     _INTCONbits, 7
00A0 01725 _00295_DS_:
               01726 ;       .line   747; brtos/BRTOS.c      return OK;  
00A0 6AE8      01727         CLRF    WREG
00A2 CFE4 F000 01728         MOVFF   PREINC1, r0x02
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A6 CFE4 F000 01729         MOVFF   PREINC1, r0x01
00AA CFE4 F000 01730         MOVFF   PREINC1, r0x00
00AE CFE4 FFD9 01731         MOVFF   PREINC1, FSR2L
00B2 CFE4 FFDA 01732         MOVFF   PREINC1, FSR2H
00B6 0012      01733         RETURN  
               01734 
               01735 ; ; Starting pCode block
               01736 S_BRTOS__BlockTask      code
0000 01737 _BlockTask:
               01738 ;       .line   665; brtos/BRTOS.c      INT8U BlockTask(INT8U iTaskNumber)
0000 CFDA FFE5 01739         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01740         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01741         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01742         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01743         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01744         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01745         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 01746         MOVFF   r0x03, POSTDEC1
0020 0E03      01747         MOVLW   0x03
0022 CFDB F000 01748         MOVFF   PLUSW2, r0x00
0026 0000      01749         BANKSEL _iNesting
               01750 ;       .line   670; brtos/BRTOS.c      if (iNesting > 0) {                                // See if caller is an interrupt
0028 5100      01751         MOVF    _iNesting, W, B
002A E000      01752         BZ      _00268_DS_
               01753 ;       .line   671; brtos/BRTOS.c      return(IRQ_PEND_ERR);                           // Can't be blocked by interrupt
002C 0E02      01754         MOVLW   0x02
002E D000      01755         BRA     _00275_DS_
0030 01756 _00268_DS_:
0030 0000      01757         BANKSEL _currentTask
               01758 ;       .line   675; brtos/BRTOS.c      if (currentTask)
0032 5100      01759         MOVF    _currentTask, W, B
0034 E000      01760         BZ      _00270_DS_
               01761 ;       .line   676; brtos/BRTOS.c      OSEnterCritical();    
0036 9E00      01762         BCF     _INTCONbits, 7
               01763 ; ;multiply lit val:0x10 by variable r0x00 and store in r0x01
               01764 ; ;Unrolled 8 X 8 multiplication
               01765 ; ;FIXME: the function does not support result==WREG
0038 01766 _00270_DS_:
               01767 ;       .line   682; brtos/BRTOS.c      iPriority = ContextTask[iTaskNumber].Priority;
0038 5000      01768         MOVF    r0x00, W
003A 0D10      01769         MULLW   0x10
003C CFF3 F000 01770         MOVFF   PRODL, r0x01
0040 6A00      01771         CLRF    r0x02
0042 0E00      01772         MOVLW   LOW(_ContextTask)
0044 2600      01773         ADDWF   r0x01, F
0046 0E00      01774         MOVLW   HIGH(_ContextTask)
0048 2200      01775         ADDWFC  r0x02, F
004A 0E09      01776         MOVLW   0x09
004C 2600      01777         ADDWF   r0x01, F
004E B0D8      01778         BTFSC   STATUS, 0
0050 2A00      01779         INCF    r0x02, F
0052 C000 FFE9 01780         MOVFF   r0x01, FSR0L
0056 C000 FFEA 01781         MOVFF   r0x02, FSR0H
005A CFEF F000 01782         MOVFF   INDF0, r0x01
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01783 ; ;multiply lit val:0x02 by variable r0x01 and store in r0x01
               01784 ; ;Unrolled 8 X 8 multiplication
               01785 ; ;FIXME: the function does not support result==WREG
               01786 ;       .line   684; brtos/BRTOS.c      OSBlockedList = OSBlockedList & ~(PriorityMask[iPriority]);
005E 90D8      01787         BCF     STATUS, 0
0060 3600      01788         RLCF    r0x01, F
0062 6A00      01789         CLRF    r0x02
0064 6A00      01790         CLRF    r0x03
0066 0E00      01791         MOVLW   LOW(_PriorityMask)
0068 2600      01792         ADDWF   r0x01, F
006A 0E00      01793         MOVLW   HIGH(_PriorityMask)
006C 2200      01794         ADDWFC  r0x02, F
006E 0E00      01795         MOVLW   UPPER(_PriorityMask)
0070 2200      01796         ADDWFC  r0x03, F
0072 C000 FFF6 01797         MOVFF   r0x01, TBLPTRL
0076 C000 FFF7 01798         MOVFF   r0x02, TBLPTRH
007A C000 FFF8 01799         MOVFF   r0x03, TBLPTRU
007E 0009      01800         TBLRD*+ 
0080 CFF5 F000 01801         MOVFF   TABLAT, r0x01
0084 0009      01802         TBLRD*+ 
0086 CFF5 F000 01803         MOVFF   TABLAT, r0x02
008A 1E00      01804         COMF    r0x01, F
008C 1E00      01805         COMF    r0x02, F
008E 5000      01806         MOVF    r0x01, W
0090 0000      01807         BANKSEL _OSBlockedList
0092 1700      01808         ANDWF   _OSBlockedList, F, B
0094 5000      01809         MOVF    r0x02, W
0096 0000      01810         BANKSEL (_OSBlockedList + 1)
0098 1700      01811         ANDWF   (_OSBlockedList + 1), F, B
009A 0000      01812         BANKSEL _currentTask
               01813 ;       .line   686; brtos/BRTOS.c      if (currentTask == iTaskNumber)
009C 5100      01814         MOVF    _currentTask, W, B
009E 1800      01815         XORWF   r0x00, W
00A0 E100      01816         BNZ     _00272_DS_
               01817 ;       .line   688; brtos/BRTOS.c      ChangeContext();     
00A2 EC00 F000 01818         CALL    _SwitchContext
00A6 01819 _00272_DS_:
00A6 0000      01820         BANKSEL _currentTask
               01821 ;       .line   692; brtos/BRTOS.c      if (currentTask)
00A8 5100      01822         MOVF    _currentTask, W, B
00AA E000      01823         BZ      _00274_DS_
               01824 ;       .line   693; brtos/BRTOS.c      OSExitCritical();  
00AC 8E00      01825         BSF     _INTCONbits, 7
00AE 01826 _00274_DS_:
               01827 ;       .line   695; brtos/BRTOS.c      return OK;
00AE 6AE8      01828         CLRF    WREG
00B0 01829 _00275_DS_:
00B0 CFE4 F000 01830         MOVFF   PREINC1, r0x03
00B4 CFE4 F000 01831         MOVFF   PREINC1, r0x02
00B8 CFE4 F000 01832         MOVFF   PREINC1, r0x01
00BC CFE4 F000 01833         MOVFF   PREINC1, r0x00
00C0 CFE4 FFD9 01834         MOVFF   PREINC1, FSR2L
00C4 CFE4 FFDA 01835         MOVFF   PREINC1, FSR2H
00C8 0012      01836         RETURN  
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01837 
               01838 ; ; Starting pCode block
               01839 S_BRTOS__UnBlockPriority        code
0000 01840 _UnBlockPriority:
               01841 ;       .line   611; brtos/BRTOS.c      INT8U UnBlockPriority(INT8U iPriority)
0000 CFDA FFE5 01842         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01843         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01844         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01845         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01846         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01847         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01848         MOVFF   r0x02, POSTDEC1
001C 0E03      01849         MOVLW   0x03
001E CFDB F000 01850         MOVFF   PLUSW2, r0x00
0022 0000      01851         BANKSEL _iNesting
               01852 ;       .line   621; brtos/BRTOS.c      if (!iNesting)
0024 5100      01853         MOVF    _iNesting, W, B
0026 E100      01854         BNZ     _00255_DS_
               01855 ;       .line   623; brtos/BRTOS.c      OSEnterCritical();
0028 9E00      01856         BCF     _INTCONbits, 7
               01857 ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
               01858 ; ;Unrolled 8 X 8 multiplication
               01859 ; ;FIXME: the function does not support result==WREG
002A 01860 _00255_DS_:
               01861 ;       .line   631; brtos/BRTOS.c      OSBlockedList = OSBlockedList | (PriorityMask[iPriority]);
002A 90D8      01862         BCF     STATUS, 0
002C 3600      01863         RLCF    r0x00, F
002E 6A00      01864         CLRF    r0x01
0030 6A00      01865         CLRF    r0x02
0032 0E00      01866         MOVLW   LOW(_PriorityMask)
0034 2600      01867         ADDWF   r0x00, F
0036 0E00      01868         MOVLW   HIGH(_PriorityMask)
0038 2200      01869         ADDWFC  r0x01, F
003A 0E00      01870         MOVLW   UPPER(_PriorityMask)
003C 2200      01871         ADDWFC  r0x02, F
003E C000 FFF6 01872         MOVFF   r0x00, TBLPTRL
0042 C000 FFF7 01873         MOVFF   r0x01, TBLPTRH
0046 C000 FFF8 01874         MOVFF   r0x02, TBLPTRU
004A 0009      01875         TBLRD*+ 
004C CFF5 F000 01876         MOVFF   TABLAT, r0x00
0050 0009      01877         TBLRD*+ 
0052 CFF5 F000 01878         MOVFF   TABLAT, r0x01
0056 5000      01879         MOVF    r0x00, W
0058 0000      01880         BANKSEL _OSBlockedList
005A 1300      01881         IORWF   _OSBlockedList, F, B
005C 5000      01882         MOVF    r0x01, W
005E 0000      01883         BANKSEL (_OSBlockedList + 1)
0060 1300      01884         IORWF   (_OSBlockedList + 1), F, B
0062 0000      01885         BANKSEL _currentTask
               01886 ;       .line   634; brtos/BRTOS.c      if (currentTask)
0064 5100      01887         MOVF    _currentTask, W, B
0066 E000      01888         BZ      _00259_DS_
0068 0000      01889         BANKSEL _iNesting
               01890 ;       .line   636; brtos/BRTOS.c      if (!iNesting)
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006A 5100      01891         MOVF    _iNesting, W, B
006C E100      01892         BNZ     _00259_DS_
               01893 ;       .line   638; brtos/BRTOS.c      ChangeContext();
006E EC00 F000 01894         CALL    _SwitchContext
0072 01895 _00259_DS_:
0072 0000      01896         BANKSEL _iNesting
               01897 ;       .line   644; brtos/BRTOS.c      if (!iNesting)
0074 5100      01898         MOVF    _iNesting, W, B
0076 E100      01899         BNZ     _00261_DS_
               01900 ;       .line   646; brtos/BRTOS.c      OSExitCritical();
0078 8E00      01901         BSF     _INTCONbits, 7
007A 01902 _00261_DS_:
               01903 ;       .line   648; brtos/BRTOS.c      return OK;
007A 6AE8      01904         CLRF    WREG
007C CFE4 F000 01905         MOVFF   PREINC1, r0x02
0080 CFE4 F000 01906         MOVFF   PREINC1, r0x01
0084 CFE4 F000 01907         MOVFF   PREINC1, r0x00
0088 CFE4 FFD9 01908         MOVFF   PREINC1, FSR2L
008C CFE4 FFDA 01909         MOVFF   PREINC1, FSR2H
0090 0012      01910         RETURN  
               01911 
               01912 ; ; Starting pCode block
               01913 S_BRTOS__BlockPriority  code
0000 01914 _BlockPriority:
               01915 ;       .line   561; brtos/BRTOS.c      INT8U BlockPriority(INT8U iPriority)
0000 CFDA FFE5 01916         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 01917         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 01918         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 01919         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 01920         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 01921         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 01922         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 01923         MOVFF   r0x03, POSTDEC1
0020 0E03      01924         MOVLW   0x03
0022 CFDB F000 01925         MOVFF   PLUSW2, r0x00
0026 0000      01926         BANKSEL _iNesting
               01927 ;       .line   566; brtos/BRTOS.c      if (iNesting > 0) {                                // See if caller is an interrupt
0028 5100      01928         MOVF    _iNesting, W, B
002A E000      01929         BZ      _00234_DS_
               01930 ;       .line   567; brtos/BRTOS.c      return(IRQ_PEND_ERR);                           // Can't be blocked by interrupt
002C 0E02      01931         MOVLW   0x02
002E D000      01932         BRA     _00241_DS_
0030 01933 _00234_DS_:
0030 0000      01934         BANKSEL _currentTask
               01935 ;       .line   571; brtos/BRTOS.c      if (currentTask)  
0032 5100      01936         MOVF    _currentTask, W, B
0034 E000      01937         BZ      _00236_DS_
               01938 ;       .line   572; brtos/BRTOS.c      OSEnterCritical();
0036 9E00      01939         BCF     _INTCONbits, 7
0038 01940 _00236_DS_:
               01941 ;       .line   576; brtos/BRTOS.c      BlockedTask = PriorityVector[iPriority];  
0038 0E00      01942         MOVLW   LOW(_PriorityVector)
003A 2400      01943         ADDWF   r0x00, W
003C 6E00      01944         MOVWF   r0x01
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003E 6A00      01945         CLRF    r0x02
0040 0E00      01946         MOVLW   HIGH(_PriorityVector)
0042 2200      01947         ADDWFC  r0x02, F
0044 C000 FFE9 01948         MOVFF   r0x01, FSR0L
0048 C000 FFEA 01949         MOVFF   r0x02, FSR0H
004C CFEF F000 01950         MOVFF   INDF0, r0x01
               01951 ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
               01952 ; ;Unrolled 8 X 8 multiplication
               01953 ; ;FIXME: the function does not support result==WREG
               01954 ;       .line   582; brtos/BRTOS.c      OSBlockedList = OSBlockedList & ~(PriorityMask[iPriority]);
0050 90D8      01955         BCF     STATUS, 0
0052 3600      01956         RLCF    r0x00, F
0054 6A00      01957         CLRF    r0x02
0056 6A00      01958         CLRF    r0x03
0058 0E00      01959         MOVLW   LOW(_PriorityMask)
005A 2600      01960         ADDWF   r0x00, F
005C 0E00      01961         MOVLW   HIGH(_PriorityMask)
005E 2200      01962         ADDWFC  r0x02, F
0060 0E00      01963         MOVLW   UPPER(_PriorityMask)
0062 2200      01964         ADDWFC  r0x03, F
0064 C000 FFF6 01965         MOVFF   r0x00, TBLPTRL
0068 C000 FFF7 01966         MOVFF   r0x02, TBLPTRH
006C C000 FFF8 01967         MOVFF   r0x03, TBLPTRU
0070 0009      01968         TBLRD*+ 
0072 CFF5 F000 01969         MOVFF   TABLAT, r0x00
0076 0009      01970         TBLRD*+ 
0078 CFF5 F000 01971         MOVFF   TABLAT, r0x02
007C 1E00      01972         COMF    r0x00, F
007E 1E00      01973         COMF    r0x02, F
0080 5000      01974         MOVF    r0x00, W
0082 0000      01975         BANKSEL _OSBlockedList
0084 1700      01976         ANDWF   _OSBlockedList, F, B
0086 5000      01977         MOVF    r0x02, W
0088 0000      01978         BANKSEL (_OSBlockedList + 1)
008A 1700      01979         ANDWF   (_OSBlockedList + 1), F, B
008C 0000      01980         BANKSEL _currentTask
               01981 ;       .line   585; brtos/BRTOS.c      if (currentTask == BlockedTask)
008E 5100      01982         MOVF    _currentTask, W, B
0090 1800      01983         XORWF   r0x01, W
0092 E100      01984         BNZ     _00238_DS_
               01985 ;       .line   587; brtos/BRTOS.c      ChangeContext();
0094 EC00 F000 01986         CALL    _SwitchContext
0098 01987 _00238_DS_:
0098 0000      01988         BANKSEL _currentTask
               01989 ;       .line   591; brtos/BRTOS.c      if (currentTask)
009A 5100      01990         MOVF    _currentTask, W, B
009C E000      01991         BZ      _00240_DS_
               01992 ;       .line   592; brtos/BRTOS.c      OSExitCritical();
009E 8E00      01993         BSF     _INTCONbits, 7
00A0 01994 _00240_DS_:
               01995 ;       .line   594; brtos/BRTOS.c      return OK;
00A0 6AE8      01996         CLRF    WREG
00A2 01997 _00241_DS_:
00A2 CFE4 F000 01998         MOVFF   PREINC1, r0x03
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A6 CFE4 F000 01999         MOVFF   PREINC1, r0x02
00AA CFE4 F000 02000         MOVFF   PREINC1, r0x01
00AE CFE4 F000 02001         MOVFF   PREINC1, r0x00
00B2 CFE4 FFD9 02002         MOVFF   PREINC1, FSR2L
00B6 CFE4 FFDA 02003         MOVFF   PREINC1, FSR2H
00BA 0012      02004         RETURN  
               02005 
               02006 ; ; Starting pCode block
               02007 S_BRTOS__PreInstallTasks        code
0000 02008 _PreInstallTasks:
               02009 ;       .line   524; brtos/BRTOS.c      void PreInstallTasks(void)
0000 CFDA FFE5 02010         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 02011         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 02012         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 02013         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 02014         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 02015         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 02016         MOVFF   r0x02, POSTDEC1
001C 0000      02017         BANKSEL _counter
               02018 ;       .line   527; brtos/BRTOS.c      counter = 0;
001E 6B00      02019         CLRF    _counter, B
0020 0000      02020         BANKSEL (_counter + 1)
0022 6B00      02021         CLRF    (_counter + 1), B
0024 0000      02022         BANKSEL _currentTask
               02023 ;       .line   528; brtos/BRTOS.c      currentTask = 0;
0026 6B00      02024         CLRF    _currentTask, B
0028 0000      02025         BANKSEL _NumberOfInstalledTasks
               02026 ;       .line   529; brtos/BRTOS.c      NumberOfInstalledTasks = 0;
002A 6B00      02027         CLRF    _NumberOfInstalledTasks, B
002C 0000      02028         BANKSEL _TaskAlloc
               02029 ;       .line   530; brtos/BRTOS.c      TaskAlloc = 0;
002E 6B00      02030         CLRF    _TaskAlloc, B
0030 0000      02031         BANKSEL (_TaskAlloc + 1)
0032 6B00      02032         CLRF    (_TaskAlloc + 1), B
0034 0000      02033         BANKSEL (_TaskAlloc + 2)
0036 6B00      02034         CLRF    (_TaskAlloc + 2), B
0038 0000      02035         BANKSEL (_TaskAlloc + 3)
003A 6B00      02036         CLRF    (_TaskAlloc + 3), B
003C 0000      02037         BANKSEL _iStackAddress
               02038 ;       .line   531; brtos/BRTOS.c      iStackAddress = 0;
003E 6B00      02039         CLRF    _iStackAddress, B
0040 0000      02040         BANKSEL (_iStackAddress + 1)
0042 6B00      02041         CLRF    (_iStackAddress + 1), B
               02042 ;       .line   533; brtos/BRTOS.c      for(i=0;i<configMAX_TASK_INSTALL;i++)
0044 6A00      02043         CLRF    r0x00
0046 02044 _00219_DS_:
0046 0E10      02045         MOVLW   0x10
0048 5C00      02046         SUBWF   r0x00, W
004A E200      02047         BC      _00222_DS_
               02048 ;       .line   535; brtos/BRTOS.c      PriorityVector[i]=EMPTY_PRIO;
004C 0E00      02049         MOVLW   LOW(_PriorityVector)
004E 2400      02050         ADDWF   r0x00, W
0050 6E00      02051         MOVWF   r0x01
0052 6A00      02052         CLRF    r0x02
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 0E00      02053         MOVLW   HIGH(_PriorityVector)
0056 2200      02054         ADDWFC  r0x02, F
0058 C000 FFE9 02055         MOVFF   r0x01, FSR0L
005C C000 FFEA 02056         MOVFF   r0x02, FSR0H
0060 0EFF      02057         MOVLW   0xff
0062 6EEF      02058         MOVWF   INDF0
               02059 ;       .line   533; brtos/BRTOS.c      for(i=0;i<configMAX_TASK_INSTALL;i++)
0064 2A00      02060         INCF    r0x00, F
0066 D000      02061         BRA     _00219_DS_
0068 02062 _00222_DS_:
0068 0000      02063         BANKSEL _Tail
               02064 ;       .line   538; brtos/BRTOS.c      Tail = NULL;
006A 6B00      02065         CLRF    _Tail, B
006C 0000      02066         BANKSEL (_Tail + 1)
006E 6B00      02067         CLRF    (_Tail + 1), B
0070 0000      02068         BANKSEL (_Tail + 2)
0072 6B00      02069         CLRF    (_Tail + 2), B
0074 0000      02070         BANKSEL _Head
               02071 ;       .line   539; brtos/BRTOS.c      Head = NULL;
0076 6B00      02072         CLRF    _Head, B
0078 0000      02073         BANKSEL (_Head + 1)
007A 6B00      02074         CLRF    (_Head + 1), B
007C 0000      02075         BANKSEL (_Head + 2)
007E 6B00      02076         CLRF    (_Head + 2), B
0080 CFE4 F000 02077         MOVFF   PREINC1, r0x02
0084 CFE4 F000 02078         MOVFF   PREINC1, r0x01
0088 CFE4 F000 02079         MOVFF   PREINC1, r0x00
008C CFE4 FFD9 02080         MOVFF   PREINC1, FSR2L
0090 CFE4 FFDA 02081         MOVFF   PREINC1, FSR2H
0094 0012      02082         RETURN  
               02083 
               02084 ; ; Starting pCode block
               02085 S_BRTOS__BRTOSStart     code
0000 02086 _BRTOSStart:
               02087 ;       .line   495; brtos/BRTOS.c      INT8U BRTOSStart(void)
0000 CFDA FFE5 02088         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 02089         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 02090         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 02091         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 02092         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 02093         MOVFF   r0x01, POSTDEC1
               02094 ;       .line   497; brtos/BRTOS.c      if (InstallIdle(&Idle,IDLE_STACK_SIZE) != OK)
0018 0E00      02095         MOVLW   0x00
001A 6EE5      02096         MOVWF   POSTDEC1
001C 0E80      02097         MOVLW   0x80
001E 6EE5      02098         MOVWF   POSTDEC1
0020 0E00      02099         MOVLW   UPPER(_Idle)
0022 6EE5      02100         MOVWF   POSTDEC1
0024 0E00      02101         MOVLW   HIGH(_Idle)
0026 6EE5      02102         MOVWF   POSTDEC1
0028 0E00      02103         MOVLW   LOW(_Idle)
002A 6EE5      02104         MOVWF   POSTDEC1
002C EC00 F000 02105         CALL    _InstallIdle
0030 6E00      02106         MOVWF   r0x00
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 0E05      02107         MOVLW   0x05
0034 26E1      02108         ADDWF   FSR1L, F
0036 B0D8      02109         BTFSC   STATUS, 0
0038 2AE2      02110         INCF    FSR1H, F
003A 5000      02111         MOVF    r0x00, W
003C E000      02112         BZ      _00205_DS_
               02113 ;       .line   499; brtos/BRTOS.c      return NO_MEMORY;
003E 0E01      02114         MOVLW   0x01
0040 D000      02115         BRA     _00209_DS_
0042 02116 _00205_DS_:
               02117 ;       .line   502; brtos/BRTOS.c      currentTask = OSSchedule();
0042 EC00 F000 02118         CALL    _OSSchedule
0046 0000      02119         BANKSEL _currentTask
0048 6F00      02120         MOVWF   _currentTask, B
               02121 ; ;multiply lit val:0x10 by variable _currentTask and store in r0x00
               02122 ; ;Unrolled 8 X 8 multiplication
               02123 ; ;FIXME: the function does not support result==WREG
004A 0000      02124         BANKSEL _currentTask
               02125 ;       .line   503; brtos/BRTOS.c      SPvalue = ContextTask[currentTask].StackPoint;
004C 5100      02126         MOVF    _currentTask, W, B
004E 0D10      02127         MULLW   0x10
0050 CFF3 F000 02128         MOVFF   PRODL, r0x00
0054 6A00      02129         CLRF    r0x01
0056 0E00      02130         MOVLW   LOW(_ContextTask)
0058 2600      02131         ADDWF   r0x00, F
005A 0E00      02132         MOVLW   HIGH(_ContextTask)
005C 2200      02133         ADDWFC  r0x01, F
005E 0E03      02134         MOVLW   0x03
0060 2600      02135         ADDWF   r0x00, F
0062 B0D8      02136         BTFSC   STATUS, 0
0064 2A00      02137         INCF    r0x01, F
0066 C000 FFE9 02138         MOVFF   r0x00, FSR0L
006A C000 FFEA 02139         MOVFF   r0x01, FSR0H
006E CFEE F000 02140         MOVFF   POSTINC0, _SPvalue
0072 CFEF F000 02141         MOVFF   INDF0, (_SPvalue + 1)
0076 C000 F000 02142         MOVFF _SPvalue, _FSR1L 
007A C000 F000 02143         MOVFF _SPvalue+1, _FSR1H 
007E C000 F000 02144         MOVFF _POSTDEC1, _FSR0L 
0082 C000 F000 02145         MOVFF _POSTDEC1, _FSR0L 
               02146 ;       .line   505; brtos/BRTOS.c      OS_RESTORE_CONTEXT();
0086 6A00      02147         CLRF    _STKPTR
0088 02148 _00206_DS_:
0088 5000      02149         MOVF    _FSR0L, W
008A 5C00      02150         SUBWF   _STKPTR, W
008C E200      02151         BC      _00208_DS_
008E 0005      02152         PUSH 
0090 5000      02153         MOVF _POSTDEC1, 0, 0 
0092 6E00      02154         MOVWF _TOSU, 0 
0094 5000      02155         MOVF _POSTDEC1, 0, 0 
0096 6E00      02156         MOVWF _TOSH, 0 
0098 5000      02157         MOVF _POSTDEC1, 0, 0 
009A 6E00      02158         MOVWF _TOSL, 0 
009C D000      02159         BRA     _00206_DS_
009E 02160 _00208_DS_:
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E CFE5 F000 02161         MOVFF POSTDEC1, _PCLATU 
00A2 CFE5 F000 02162         MOVFF POSTDEC1, _PCLATH 
00A6 CFE5 F000 02163         MOVFF POSTDEC1, _PRODH 
00AA CFE5 F000 02164         MOVFF POSTDEC1, _PRODL 
00AE CFE5 F000 02165         MOVFF POSTDEC1, _TBLPTRU 
00B2 CFE5 F000 02166         MOVFF POSTDEC1, _TBLPTRH 
00B6 CFE5 F000 02167         MOVFF POSTDEC1, _TBLPTRL 
00BA CFE5 F000 02168         MOVFF POSTDEC1, _TABLAT 
00BE CFE5 F000 02169         MOVFF POSTDEC1, _FSR0H 
00C2 CFE5 F000 02170         MOVFF POSTDEC1, _FSR0L 
00C6 CFE5 F000 02171         MOVFF POSTDEC1, _FSR2L 
00CA CFE5 F000 02172         MOVFF POSTDEC1, _FSR2H 
00CE C000 F000 02173         MOVFF _FSR2H, _FSR1H 
00D2 CFE5 F000 02174         MOVFF POSTDEC1, _BSR 
00D6 CFE5 F000 02175         MOVFF POSTDEC1, _WREG 
00DA CFE5 F000 02176         MOVFF POSTDEC1, _STATUS 
00DE 0010      02177         RETFIE 0 
               02178 ;       .line   507; brtos/BRTOS.c      return OK;
00E0 6AE8      02179         CLRF    WREG
00E2 02180 _00209_DS_:
00E2 CFE4 F000 02181         MOVFF   PREINC1, r0x01
00E6 CFE4 F000 02182         MOVFF   PREINC1, r0x00
00EA CFE4 FFD9 02183         MOVFF   PREINC1, FSR2L
00EE CFE4 FFDA 02184         MOVFF   PREINC1, FSR2H
00F2 0012      02185         RETURN  
               02186 
               02187 ; ; Starting pCode block
               02188 S_BRTOS__OS_TICK_HANDLER        code
0000 02189 _OS_TICK_HANDLER:
               02190 ;       .line   402; brtos/BRTOS.c      void OS_TICK_HANDLER(void)
0000 CFDA FFE5 02191         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 02192         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 02193         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 02194         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 02195         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 02196         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 02197         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 02198         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 02199         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 02200         MOVFF   r0x05, POSTDEC1
0028 C000 FFE5 02201         MOVFF   r0x06, POSTDEC1
002C C000 FFE5 02202         MOVFF   r0x07, POSTDEC1
0030 C000 FFE5 02203         MOVFF   r0x08, POSTDEC1
0034 C000 FFE5 02204         MOVFF   r0x09, POSTDEC1
0038 C000 FFE5 02205         MOVFF   r0x0a, POSTDEC1
003C C000 FFE5 02206         MOVFF   r0x0b, POSTDEC1
               02207 ;       .line   406; brtos/BRTOS.c      ContextType *Task = Head;  
0040 C000 F000 02208         MOVFF   _Head, r0x00
0044 C000 F000 02209         MOVFF   (_Head + 1), r0x01
0048 C000 F000 02210         MOVFF   (_Head + 2), r0x02
004C 02211 _00175_DS_:
               02212 ;       .line   411; brtos/BRTOS.c      while(Task != NULL)
004C 5000      02213         MOVF    r0x00, W
004E 1000      02214         IORWF   r0x01, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 1000      02215         IORWF   r0x02, W
0052 B4D8      02216         BTFSC   STATUS, 2
0054 D000      02217         BRA     _00177_DS_
               02218 ;       .line   413; brtos/BRTOS.c      if (Task->TimeToWait == counter)
0056 5000      02219         MOVF    r0x00, W
0058 0F07      02220         ADDLW   0x07
005A 6E00      02221         MOVWF   r0x03
005C 0E00      02222         MOVLW   0x00
005E 2000      02223         ADDWFC  r0x01, W
0060 6E00      02224         MOVWF   r0x04
0062 0E00      02225         MOVLW   0x00
0064 2000      02226         ADDWFC  r0x02, W
0066 6E00      02227         MOVWF   r0x05
0068 C000 FFE9 02228         MOVFF   r0x03, FSR0L
006C C000 FFF3 02229         MOVFF   r0x04, PRODL
0070 5000      02230         MOVF    r0x05, W
0072 EC00 F000 02231         CALL    __gptrget2
0076 6E00      02232         MOVWF   r0x06
0078 CFF3 F000 02233         MOVFF   PRODL, r0x07
007C 5000      02234         MOVF    r0x06, W
007E 0000      02235         BANKSEL _counter
0080 1900      02236         XORWF   _counter, W, B
0082 E100      02237         BNZ     _00190_DS_
0084 5000      02238         MOVF    r0x07, W
0086 0000      02239         BANKSEL (_counter + 1)
0088 1900      02240         XORWF   (_counter + 1), W, B
008A E000      02241         BZ      _00191_DS_
008C 02242 _00190_DS_:
008C D000      02243         BRA     _00174_DS_
008E 02244 _00191_DS_:
               02245 ;       .line   416; brtos/BRTOS.c      iPrio = Task->Priority;
008E 5000      02246         MOVF    r0x00, W
0090 0F09      02247         ADDLW   0x09
0092 6E00      02248         MOVWF   r0x06
0094 0E00      02249         MOVLW   0x00
0096 2000      02250         ADDWFC  r0x01, W
0098 6E00      02251         MOVWF   r0x07
009A 0E00      02252         MOVLW   0x00
009C 2000      02253         ADDWFC  r0x02, W
009E 6E00      02254         MOVWF   r0x08
00A0 C000 FFE9 02255         MOVFF   r0x06, FSR0L
00A4 C000 FFF3 02256         MOVFF   r0x07, PRODL
00A8 5000      02257         MOVF    r0x08, W
00AA EC00 F000 02258         CALL    __gptrget1
00AE 6E00      02259         MOVWF   r0x06
               02260 ; ;multiply lit val:0x02 by variable r0x06 and store in r0x06
               02261 ; ;Unrolled 8 X 8 multiplication
               02262 ; ;FIXME: the function does not support result==WREG
               02263 ;       .line   423; brtos/BRTOS.c      OSReadyList = OSReadyList | (PriorityMask[iPrio]);
00B0 90D8      02264         BCF     STATUS, 0
00B2 3600      02265         RLCF    r0x06, F
00B4 6A00      02266         CLRF    r0x07
00B6 6A00      02267         CLRF    r0x08
00B8 0E00      02268         MOVLW   LOW(_PriorityMask)
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BA 2600      02269         ADDWF   r0x06, F
00BC 0E00      02270         MOVLW   HIGH(_PriorityMask)
00BE 2200      02271         ADDWFC  r0x07, F
00C0 0E00      02272         MOVLW   UPPER(_PriorityMask)
00C2 2200      02273         ADDWFC  r0x08, F
00C4 C000 FFF6 02274         MOVFF   r0x06, TBLPTRL
00C8 C000 FFF7 02275         MOVFF   r0x07, TBLPTRH
00CC C000 FFF8 02276         MOVFF   r0x08, TBLPTRU
00D0 0009      02277         TBLRD*+ 
00D2 CFF5 F000 02278         MOVFF   TABLAT, r0x06
00D6 0009      02279         TBLRD*+ 
00D8 CFF5 F000 02280         MOVFF   TABLAT, r0x07
00DC 5000      02281         MOVF    r0x06, W
00DE 0000      02282         BANKSEL _OSReadyList
00E0 1300      02283         IORWF   _OSReadyList, F, B
00E2 5000      02284         MOVF    r0x07, W
00E4 0000      02285         BANKSEL (_OSReadyList + 1)
00E6 1300      02286         IORWF   (_OSReadyList + 1), F, B
               02287 ;       .line   429; brtos/BRTOS.c      Task->TimeToWait = EXIT_BY_TIMEOUT;
00E8 0EE9      02288         MOVLW   0xe9
00EA 6EE5      02289         MOVWF   POSTDEC1
00EC 0EFD      02290         MOVLW   0xfd
00EE 6EF4      02291         MOVWF   PRODH
00F0 C000 FFE9 02292         MOVFF   r0x03, FSR0L
00F4 C000 FFF3 02293         MOVFF   r0x04, PRODL
00F8 5000      02294         MOVF    r0x05, W
00FA EC00 F000 02295         CALL    __gptrput2
               02296 ;       .line   436; brtos/BRTOS.c      RemoveFromDelayList();
00FE 5000      02297         MOVF    r0x00, W
0100 0000      02298         BANKSEL _Head
0102 1900      02299         XORWF   _Head, W, B
0104 E100      02300         BNZ     _00193_DS_
0106 5000      02301         MOVF    r0x01, W
0108 0000      02302         BANKSEL (_Head + 1)
010A 1900      02303         XORWF   (_Head + 1), W, B
010C E100      02304         BNZ     _00193_DS_
010E 5000      02305         MOVF    r0x02, W
0110 0000      02306         BANKSEL (_Head + 2)
0112 1900      02307         XORWF   (_Head + 2), W, B
0114 E000      02308         BZ      _00194_DS_
0116 02309 _00193_DS_:
0116 D000      02310         BRA     _00171_DS_
0118 02311 _00194_DS_:
0118 5000      02312         MOVF    r0x00, W
011A 0000      02313         BANKSEL _Tail
011C 1900      02314         XORWF   _Tail, W, B
011E E100      02315         BNZ     _00195_DS_
0120 5000      02316         MOVF    r0x01, W
0122 0000      02317         BANKSEL (_Tail + 1)
0124 1900      02318         XORWF   (_Tail + 1), W, B
0126 E100      02319         BNZ     _00195_DS_
0128 5000      02320         MOVF    r0x02, W
012A 0000      02321         BANKSEL (_Tail + 2)
012C 1900      02322         XORWF   (_Tail + 2), W, B
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012E E000      02323         BZ      _00196_DS_
0130 02324 _00195_DS_:
0130 D000      02325         BRA     _00165_DS_
0132 02326 _00196_DS_:
0132 0000      02327         BANKSEL _Tail
0134 6B00      02328         CLRF    _Tail, B
0136 0000      02329         BANKSEL (_Tail + 1)
0138 6B00      02330         CLRF    (_Tail + 1), B
013A 0000      02331         BANKSEL (_Tail + 2)
013C 6B00      02332         CLRF    (_Tail + 2), B
013E 0000      02333         BANKSEL _Head
0140 6B00      02334         CLRF    _Head, B
0142 0000      02335         BANKSEL (_Head + 1)
0144 6B00      02336         CLRF    (_Head + 1), B
0146 0000      02337         BANKSEL (_Head + 2)
0148 6B00      02338         CLRF    (_Head + 2), B
014A D000      02339         BRA     _00174_DS_
014C 02340 _00165_DS_:
014C 5000      02341         MOVF    r0x00, W
014E 0F0A      02342         ADDLW   0x0a
0150 6E00      02343         MOVWF   r0x03
0152 0E00      02344         MOVLW   0x00
0154 2000      02345         ADDWFC  r0x01, W
0156 6E00      02346         MOVWF   r0x04
0158 0E00      02347         MOVLW   0x00
015A 2000      02348         ADDWFC  r0x02, W
015C 6E00      02349         MOVWF   r0x05
015E C000 FFE9 02350         MOVFF   r0x03, FSR0L
0162 C000 FFF3 02351         MOVFF   r0x04, PRODL
0166 5000      02352         MOVF    r0x05, W
0168 EC00 F000 02353         CALL    __gptrget3
016C 0000      02354         BANKSEL _Head
016E 6F00      02355         MOVWF   _Head, B
0170 CFF3 F000 02356         MOVFF   PRODL, (_Head + 1)
0174 CFF4 F000 02357         MOVFF   PRODH, (_Head + 2)
0178 C000 F000 02358         MOVFF   _Head, r0x03
017C C000 F000 02359         MOVFF   (_Head + 1), r0x04
0180 C000 F000 02360         MOVFF   (_Head + 2), r0x05
0184 0E0D      02361         MOVLW   0x0d
0186 2600      02362         ADDWF   r0x03, F
0188 0E00      02363         MOVLW   0x00
018A 2200      02364         ADDWFC  r0x04, F
018C 0E00      02365         MOVLW   0x00
018E 2200      02366         ADDWFC  r0x05, F
0190 0E00      02367         MOVLW   0x00
0192 6EE5      02368         MOVWF   POSTDEC1
0194 0E00      02369         MOVLW   0x00
0196 6EF4      02370         MOVWF   PRODH
0198 0E00      02371         MOVLW   0x00
019A 6EF6      02372         MOVWF   TBLPTRL
019C C000 FFE9 02373         MOVFF   r0x03, FSR0L
01A0 C000 FFF3 02374         MOVFF   r0x04, PRODL
01A4 5000      02375         MOVF    r0x05, W
01A6 EC00 F000 02376         CALL    __gptrput3
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AA D000      02377         BRA     _00174_DS_
01AC 02378 _00171_DS_:
01AC 5000      02379         MOVF    r0x00, W
01AE 0000      02380         BANKSEL _Tail
01B0 1900      02381         XORWF   _Tail, W, B
01B2 E100      02382         BNZ     _00197_DS_
01B4 5000      02383         MOVF    r0x01, W
01B6 0000      02384         BANKSEL (_Tail + 1)
01B8 1900      02385         XORWF   (_Tail + 1), W, B
01BA E100      02386         BNZ     _00197_DS_
01BC 5000      02387         MOVF    r0x02, W
01BE 0000      02388         BANKSEL (_Tail + 2)
01C0 1900      02389         XORWF   (_Tail + 2), W, B
01C2 E000      02390         BZ      _00198_DS_
01C4 02391 _00197_DS_:
01C4 D000      02392         BRA     _00168_DS_
01C6 02393 _00198_DS_:
01C6 5000      02394         MOVF    r0x00, W
01C8 0F0D      02395         ADDLW   0x0d
01CA 6E00      02396         MOVWF   r0x03
01CC 0E00      02397         MOVLW   0x00
01CE 2000      02398         ADDWFC  r0x01, W
01D0 6E00      02399         MOVWF   r0x04
01D2 0E00      02400         MOVLW   0x00
01D4 2000      02401         ADDWFC  r0x02, W
01D6 6E00      02402         MOVWF   r0x05
01D8 C000 FFE9 02403         MOVFF   r0x03, FSR0L
01DC C000 FFF3 02404         MOVFF   r0x04, PRODL
01E0 5000      02405         MOVF    r0x05, W
01E2 EC00 F000 02406         CALL    __gptrget3
01E6 0000      02407         BANKSEL _Tail
01E8 6F00      02408         MOVWF   _Tail, B
01EA CFF3 F000 02409         MOVFF   PRODL, (_Tail + 1)
01EE CFF4 F000 02410         MOVFF   PRODH, (_Tail + 2)
01F2 C000 F000 02411         MOVFF   _Tail, r0x03
01F6 C000 F000 02412         MOVFF   (_Tail + 1), r0x04
01FA C000 F000 02413         MOVFF   (_Tail + 2), r0x05
01FE 0E0A      02414         MOVLW   0x0a
0200 2600      02415         ADDWF   r0x03, F
0202 0E00      02416         MOVLW   0x00
0204 2200      02417         ADDWFC  r0x04, F
0206 0E00      02418         MOVLW   0x00
0208 2200      02419         ADDWFC  r0x05, F
020A 0E00      02420         MOVLW   0x00
020C 6EE5      02421         MOVWF   POSTDEC1
020E 0E00      02422         MOVLW   0x00
0210 6EF4      02423         MOVWF   PRODH
0212 0E00      02424         MOVLW   0x00
0214 6EF6      02425         MOVWF   TBLPTRL
0216 C000 FFE9 02426         MOVFF   r0x03, FSR0L
021A C000 FFF3 02427         MOVFF   r0x04, PRODL
021E 5000      02428         MOVF    r0x05, W
0220 EC00 F000 02429         CALL    __gptrput3
0224 D000      02430         BRA     _00174_DS_
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0226 02431 _00168_DS_:
0226 5000      02432         MOVF    r0x00, W
0228 0F0A      02433         ADDLW   0x0a
022A 6E00      02434         MOVWF   r0x03
022C 0E00      02435         MOVLW   0x00
022E 2000      02436         ADDWFC  r0x01, W
0230 6E00      02437         MOVWF   r0x04
0232 0E00      02438         MOVLW   0x00
0234 2000      02439         ADDWFC  r0x02, W
0236 6E00      02440         MOVWF   r0x05
0238 C000 FFE9 02441         MOVFF   r0x03, FSR0L
023C C000 FFF3 02442         MOVFF   r0x04, PRODL
0240 5000      02443         MOVF    r0x05, W
0242 EC00 F000 02444         CALL    __gptrget3
0246 6E00      02445         MOVWF   r0x03
0248 CFF3 F000 02446         MOVFF   PRODL, r0x04
024C CFF4 F000 02447         MOVFF   PRODH, r0x05
0250 5000      02448         MOVF    r0x03, W
0252 0F0D      02449         ADDLW   0x0d
0254 6E00      02450         MOVWF   r0x06
0256 0E00      02451         MOVLW   0x00
0258 2000      02452         ADDWFC  r0x04, W
025A 6E00      02453         MOVWF   r0x07
025C 0E00      02454         MOVLW   0x00
025E 2000      02455         ADDWFC  r0x05, W
0260 6E00      02456         MOVWF   r0x08
0262 5000      02457         MOVF    r0x00, W
0264 0F0D      02458         ADDLW   0x0d
0266 6E00      02459         MOVWF   r0x09
0268 0E00      02460         MOVLW   0x00
026A 2000      02461         ADDWFC  r0x01, W
026C 6E00      02462         MOVWF   r0x0a
026E 0E00      02463         MOVLW   0x00
0270 2000      02464         ADDWFC  r0x02, W
0272 6E00      02465         MOVWF   r0x0b
0274 C000 FFE9 02466         MOVFF   r0x09, FSR0L
0278 C000 FFF3 02467         MOVFF   r0x0a, PRODL
027C 5000      02468         MOVF    r0x0b, W
027E EC00 F000 02469         CALL    __gptrget3
0282 6E00      02470         MOVWF   r0x09
0284 CFF3 F000 02471         MOVFF   PRODL, r0x0a
0288 CFF4 F000 02472         MOVFF   PRODH, r0x0b
028C C000 FFE5 02473         MOVFF   r0x09, POSTDEC1
0290 C000 FFF4 02474         MOVFF   r0x0a, PRODH
0294 C000 FFF6 02475         MOVFF   r0x0b, TBLPTRL
0298 C000 FFE9 02476         MOVFF   r0x06, FSR0L
029C C000 FFF3 02477         MOVFF   r0x07, PRODL
02A0 5000      02478         MOVF    r0x08, W
02A2 EC00 F000 02479         CALL    __gptrput3
02A6 0E0A      02480         MOVLW   0x0a
02A8 2600      02481         ADDWF   r0x09, F
02AA 0E00      02482         MOVLW   0x00
02AC 2200      02483         ADDWFC  r0x0a, F
02AE 0E00      02484         MOVLW   0x00
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02B0 2200      02485         ADDWFC  r0x0b, F
02B2 C000 FFE5 02486         MOVFF   r0x03, POSTDEC1
02B6 C000 FFF4 02487         MOVFF   r0x04, PRODH
02BA C000 FFF6 02488         MOVFF   r0x05, TBLPTRL
02BE C000 FFE9 02489         MOVFF   r0x09, FSR0L
02C2 C000 FFF3 02490         MOVFF   r0x0a, PRODL
02C6 5000      02491         MOVF    r0x0b, W
02C8 EC00 F000 02492         CALL    __gptrput3
02CC 02493 _00174_DS_:
               02494 ;       .line   439; brtos/BRTOS.c      Task = Task->Next;
02CC 5000      02495         MOVF    r0x00, W
02CE 0F0A      02496         ADDLW   0x0a
02D0 6E00      02497         MOVWF   r0x03
02D2 0E00      02498         MOVLW   0x00
02D4 2000      02499         ADDWFC  r0x01, W
02D6 6E00      02500         MOVWF   r0x04
02D8 0E00      02501         MOVLW   0x00
02DA 2000      02502         ADDWFC  r0x02, W
02DC 6E00      02503         MOVWF   r0x05
02DE C000 FFE9 02504         MOVFF   r0x03, FSR0L
02E2 C000 FFF3 02505         MOVFF   r0x04, PRODL
02E6 5000      02506         MOVF    r0x05, W
02E8 EC00 F000 02507         CALL    __gptrget3
02EC 6E00      02508         MOVWF   r0x00
02EE CFF3 F000 02509         MOVFF   PRODL, r0x01
02F2 CFF4 F000 02510         MOVFF   PRODH, r0x02
02F6 D000      02511         BRA     _00175_DS_
02F8 02512 _00177_DS_:
               02513 ;       .line   448; brtos/BRTOS.c      if (DutyCnt >= 1024)
02F8 0E04      02514         MOVLW   0x04
02FA 0000      02515         BANKSEL (_DutyCnt + 1)
02FC 5D00      02516         SUBWF   (_DutyCnt + 1), W, B
02FE E100      02517         BNZ     _00199_DS_
0300 0E00      02518         MOVLW   0x00
0302 0000      02519         BANKSEL _DutyCnt
0304 5D00      02520         SUBWF   _DutyCnt, W, B
0306 02521 _00199_DS_:
0306 A0D8      02522         BTFSS   STATUS, 0
0308 D000      02523         BRA     _00179_DS_
030A 0000      02524         BANKSEL _DutyCnt
               02525 ;       .line   450; brtos/BRTOS.c      DutyCnt = 0;
030C 6B00      02526         CLRF    _DutyCnt, B
030E 0000      02527         BANKSEL (_DutyCnt + 1)
0310 6B00      02528         CLRF    (_DutyCnt + 1), B
0312 0000      02529         BANKSEL _OSDutyTmp
               02530 ;       .line   451; brtos/BRTOS.c      OSDuty = (INT32U)((INT32U)OSDuty + (INT32U)OSDutyTmp);
0314 5100      02531         MOVF    _OSDutyTmp, W, B
0316 0000      02532         BANKSEL _OSDuty
0318 2700      02533         ADDWF   _OSDuty, F, B
031A 0000      02534         BANKSEL (_OSDutyTmp + 1)
031C 5100      02535         MOVF    (_OSDutyTmp + 1), W, B
031E 0000      02536         BANKSEL (_OSDuty + 1)
0320 2300      02537         ADDWFC  (_OSDuty + 1), F, B
0322 0000      02538         BANKSEL (_OSDutyTmp + 2)
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0324 5100      02539         MOVF    (_OSDutyTmp + 2), W, B
0326 0000      02540         BANKSEL (_OSDuty + 2)
0328 2300      02541         ADDWFC  (_OSDuty + 2), F, B
032A 0000      02542         BANKSEL (_OSDutyTmp + 3)
032C 5100      02543         MOVF    (_OSDutyTmp + 3), W, B
032E 0000      02544         BANKSEL (_OSDuty + 3)
0330 2300      02545         ADDWFC  (_OSDuty + 3), F, B
               02546 ;       .line   452; brtos/BRTOS.c      LastOSDuty = (INT16U)(OSDuty >> 10);
0332 90D8      02547         BCF     STATUS, 0
0334 0000      02548         BANKSEL (_OSDuty + 2)
0336 3100      02549         RRCF    (_OSDuty + 2), W, B
0338 6E00      02550         MOVWF   r0x01
033A 0000      02551         BANKSEL (_OSDuty + 1)
033C 3100      02552         RRCF    (_OSDuty + 1), W, B
033E 6E00      02553         MOVWF   r0x00
0340 90D8      02554         BCF     STATUS, 0
0342 3200      02555         RRCF    r0x01, F
0344 3200      02556         RRCF    r0x00, F
0346 0000      02557         BANKSEL (_OSDuty + 3)
0348 5100      02558         MOVF    (_OSDuty + 3), W, B
034A 40E8      02559         RRNCF   WREG, W
034C 40E8      02560         RRNCF   WREG, W
034E 0BC0      02561         ANDLW   0xc0
0350 1200      02562         IORWF   r0x01, F
0352 0000      02563         BANKSEL (_OSDuty + 3)
0354 4100      02564         RRNCF   (_OSDuty + 3), W, B
0356 40E8      02565         RRNCF   WREG, W
0358 0B3F      02566         ANDLW   0x3f
035A 6E00      02567         MOVWF   r0x02
035C 6A00      02568         CLRF    r0x03
035E 5000      02569         MOVF    r0x00, W
0360 0000      02570         BANKSEL _LastOSDuty
0362 6F00      02571         MOVWF   _LastOSDuty, B
0364 5000      02572         MOVF    r0x01, W
0366 0000      02573         BANKSEL (_LastOSDuty + 1)
0368 6F00      02574         MOVWF   (_LastOSDuty + 1), B
036A 0000      02575         BANKSEL _OSDuty
               02576 ;       .line   453; brtos/BRTOS.c      OSDuty = 0;
036C 6B00      02577         CLRF    _OSDuty, B
036E 0000      02578         BANKSEL (_OSDuty + 1)
0370 6B00      02579         CLRF    (_OSDuty + 1), B
0372 0000      02580         BANKSEL (_OSDuty + 2)
0374 6B00      02581         CLRF    (_OSDuty + 2), B
0376 0000      02582         BANKSEL (_OSDuty + 3)
0378 6B00      02583         CLRF    (_OSDuty + 3), B
037A D000      02584         BRA     _00180_DS_
037C 02585 _00179_DS_:
037C 0000      02586         BANKSEL _OSDutyTmp
               02587 ;       .line   456; brtos/BRTOS.c      OSDuty = (INT32U)((INT32U)OSDuty + (INT32U)OSDutyTmp);
037E 5100      02588         MOVF    _OSDutyTmp, W, B
0380 0000      02589         BANKSEL _OSDuty
0382 2700      02590         ADDWF   _OSDuty, F, B
0384 0000      02591         BANKSEL (_OSDutyTmp + 1)
0386 5100      02592         MOVF    (_OSDutyTmp + 1), W, B
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0388 0000      02593         BANKSEL (_OSDuty + 1)
038A 2300      02594         ADDWFC  (_OSDuty + 1), F, B
038C 0000      02595         BANKSEL (_OSDutyTmp + 2)
038E 5100      02596         MOVF    (_OSDutyTmp + 2), W, B
0390 0000      02597         BANKSEL (_OSDuty + 2)
0392 2300      02598         ADDWFC  (_OSDuty + 2), F, B
0394 0000      02599         BANKSEL (_OSDutyTmp + 3)
0396 5100      02600         MOVF    (_OSDutyTmp + 3), W, B
0398 0000      02601         BANKSEL (_OSDuty + 3)
039A 2300      02602         ADDWFC  (_OSDuty + 3), F, B
039C 0000      02603         BANKSEL _DutyCnt
               02604 ;       .line   457; brtos/BRTOS.c      DutyCnt++;
039E 2B00      02605         INCF    _DutyCnt, F, B
03A0 E300      02606         BNC     _10470_DS_
03A2 0000      02607         BANKSEL (_DutyCnt + 1)
03A4 2B00      02608         INCF    (_DutyCnt + 1), F, B
03A6 02609 _10470_DS_:
03A6 02610 _00180_DS_:
               02611 ;       .line   459; brtos/BRTOS.c      OSDutyTmp = TIMER_MODULE;
03A6 C000 F000 02612         MOVFF   _CCPR1, _OSDutyTmp
03AA 0000      02613         BANKSEL (_OSDutyTmp + 1)
03AC 6B00      02614         CLRF    (_OSDutyTmp + 1), B
03AE 0000      02615         BANKSEL (_OSDutyTmp + 2)
03B0 6B00      02616         CLRF    (_OSDutyTmp + 2), B
03B2 0000      02617         BANKSEL (_OSDutyTmp + 3)
03B4 6B00      02618         CLRF    (_OSDutyTmp + 3), B
03B6 CFE4 F000 02619         MOVFF   PREINC1, r0x0b
03BA CFE4 F000 02620         MOVFF   PREINC1, r0x0a
03BE CFE4 F000 02621         MOVFF   PREINC1, r0x09
03C2 CFE4 F000 02622         MOVFF   PREINC1, r0x08
03C6 CFE4 F000 02623         MOVFF   PREINC1, r0x07
03CA CFE4 F000 02624         MOVFF   PREINC1, r0x06
03CE CFE4 F000 02625         MOVFF   PREINC1, r0x05
03D2 CFE4 F000 02626         MOVFF   PREINC1, r0x04
03D6 CFE4 F000 02627         MOVFF   PREINC1, r0x03
03DA CFE4 F000 02628         MOVFF   PREINC1, r0x02
03DE CFE4 F000 02629         MOVFF   PREINC1, r0x01
03E2 CFE4 F000 02630         MOVFF   PREINC1, r0x00
03E6 CFE4 FFD9 02631         MOVFF   PREINC1, FSR2L
03EA CFE4 FFDA 02632         MOVFF   PREINC1, FSR2H
03EE 0012      02633         RETURN  
               02634 
               02635 ; ; Starting pCode block
               02636 S_BRTOS__DelayTaskHMSM  code
0000 02637 _DelayTaskHMSM:
               02638 ;       .line   348; brtos/BRTOS.c      INT8U DelayTaskHMSM(INT8U hours, INT8U minutes, INT8U seconds, INT16U miliseconds)
0000 CFDA FFE5 02639         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 02640         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 02641         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 02642         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 02643         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 02644         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 02645         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 02646         MOVFF   r0x03, POSTDEC1
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 02647         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 02648         MOVFF   r0x05, POSTDEC1
0028 C000 FFE5 02649         MOVFF   r0x06, POSTDEC1
002C C000 FFE5 02650         MOVFF   r0x07, POSTDEC1
0030 C000 FFE5 02651         MOVFF   r0x08, POSTDEC1
0034 C000 FFE5 02652         MOVFF   r0x09, POSTDEC1
0038 C000 FFE5 02653         MOVFF   r0x0a, POSTDEC1
003C 0E03      02654         MOVLW   0x03
003E CFDB F000 02655         MOVFF   PLUSW2, r0x00
0042 0E04      02656         MOVLW   0x04
0044 CFDB F000 02657         MOVFF   PLUSW2, r0x01
0048 0E05      02658         MOVLW   0x05
004A CFDB F000 02659         MOVFF   PLUSW2, r0x02
004E 0E06      02660         MOVLW   0x06
0050 CFDB F000 02661         MOVFF   PLUSW2, r0x03
0054 0E07      02662         MOVLW   0x07
0056 CFDB F000 02663         MOVFF   PLUSW2, r0x04
               02664 ;       .line   353; brtos/BRTOS.c      if (minutes > 59)
005A 0E3C      02665         MOVLW   0x3c
005C 5C00      02666         SUBWF   r0x01, W
005E E300      02667         BNC     _00137_DS_
               02668 ;       .line   354; brtos/BRTOS.c      return INVALID_TIME;
0060 0E05      02669         MOVLW   0x05
0062 D000      02670         BRA     _00148_DS_
0064 02671 _00137_DS_:
               02672 ;       .line   356; brtos/BRTOS.c      if (seconds > 59)
0064 0E3C      02673         MOVLW   0x3c
0066 5C00      02674         SUBWF   r0x02, W
0068 E300      02675         BNC     _00139_DS_
               02676 ;       .line   357; brtos/BRTOS.c      return INVALID_TIME;
006A 0E05      02677         MOVLW   0x05
006C D000      02678         BRA     _00148_DS_
006E 02679 _00139_DS_:
               02680 ;       .line   359; brtos/BRTOS.c      if (miliseconds > 999)
006E 0E03      02681         MOVLW   0x03
0070 5C00      02682         SUBWF   r0x04, W
0072 E100      02683         BNZ     _00159_DS_
0074 0EE8      02684         MOVLW   0xe8
0076 5C00      02685         SUBWF   r0x03, W
0078 02686 _00159_DS_:
0078 E300      02687         BNC     _00141_DS_
               02688 ;       .line   360; brtos/BRTOS.c      return INVALID_TIME;  
007A 0E05      02689         MOVLW   0x05
007C D000      02690         BRA     _00148_DS_
007E 02691 _00141_DS_:
               02692 ;       .line   362; brtos/BRTOS.c      ticks = (INT32U)hours   * 3600L * configTICK_RATE_HZ
007E 6A00      02693         CLRF    r0x05
0080 6A00      02694         CLRF    r0x06
0082 6A00      02695         CLRF    r0x07
               02696 ;       .line   363; brtos/BRTOS.c      + (INT32U)minutes * 60L   * configTICK_RATE_HZ
0084 5000      02697         MOVF    r0x07, W
0086 6EE5      02698         MOVWF   POSTDEC1
0088 5000      02699         MOVF    r0x06, W
008A 6EE5      02700         MOVWF   POSTDEC1
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C 5000      02701         MOVF    r0x05, W
008E 6EE5      02702         MOVWF   POSTDEC1
0090 5000      02703         MOVF    r0x00, W
0092 6EE5      02704         MOVWF   POSTDEC1
0094 0E00      02705         MOVLW   0x00
0096 6EE5      02706         MOVWF   POSTDEC1
0098 0E36      02707         MOVLW   0x36
009A 6EE5      02708         MOVWF   POSTDEC1
009C 0EEE      02709         MOVLW   0xee
009E 6EE5      02710         MOVWF   POSTDEC1
00A0 0E80      02711         MOVLW   0x80
00A2 6EE5      02712         MOVWF   POSTDEC1
00A4 EC00 F000 02713         CALL    __mullong
00A8 6E00      02714         MOVWF   r0x00
00AA CFF3 F000 02715         MOVFF   PRODL, r0x05
00AE CFF4 F000 02716         MOVFF   PRODH, r0x06
00B2 CFE9 F000 02717         MOVFF   FSR0L, r0x07
00B6 0E08      02718         MOVLW   0x08
00B8 26E1      02719         ADDWF   FSR1L, F
00BA B0D8      02720         BTFSC   STATUS, 0
00BC 2AE2      02721         INCF    FSR1H, F
00BE 6A00      02722         CLRF    r0x08
00C0 6A00      02723         CLRF    r0x09
00C2 6A00      02724         CLRF    r0x0a
00C4 5000      02725         MOVF    r0x0a, W
00C6 6EE5      02726         MOVWF   POSTDEC1
00C8 5000      02727         MOVF    r0x09, W
00CA 6EE5      02728         MOVWF   POSTDEC1
00CC 5000      02729         MOVF    r0x08, W
00CE 6EE5      02730         MOVWF   POSTDEC1
00D0 5000      02731         MOVF    r0x01, W
00D2 6EE5      02732         MOVWF   POSTDEC1
00D4 0E00      02733         MOVLW   0x00
00D6 6EE5      02734         MOVWF   POSTDEC1
00D8 0E00      02735         MOVLW   0x00
00DA 6EE5      02736         MOVWF   POSTDEC1
00DC 0EEA      02737         MOVLW   0xea
00DE 6EE5      02738         MOVWF   POSTDEC1
00E0 0E60      02739         MOVLW   0x60
00E2 6EE5      02740         MOVWF   POSTDEC1
00E4 EC00 F000 02741         CALL    __mullong
00E8 6E00      02742         MOVWF   r0x01
00EA CFF3 F000 02743         MOVFF   PRODL, r0x08
00EE CFF4 F000 02744         MOVFF   PRODH, r0x09
00F2 CFE9 F000 02745         MOVFF   FSR0L, r0x0a
00F6 0E08      02746         MOVLW   0x08
00F8 26E1      02747         ADDWF   FSR1L, F
00FA B0D8      02748         BTFSC   STATUS, 0
00FC 2AE2      02749         INCF    FSR1H, F
00FE 5000      02750         MOVF    r0x01, W
0100 2600      02751         ADDWF   r0x00, F
0102 5000      02752         MOVF    r0x08, W
0104 2200      02753         ADDWFC  r0x05, F
0106 5000      02754         MOVF    r0x09, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 2200      02755         ADDWFC  r0x06, F
010A 5000      02756         MOVF    r0x0a, W
010C 2200      02757         ADDWFC  r0x07, F
               02758 ;       .line   364; brtos/BRTOS.c      + (INT32U)seconds *         configTICK_RATE_HZ
010E 6A00      02759         CLRF    r0x01
0110 6A00      02760         CLRF    r0x08
0112 6A00      02761         CLRF    r0x09
0114 5000      02762         MOVF    r0x09, W
0116 6EE5      02763         MOVWF   POSTDEC1
0118 5000      02764         MOVF    r0x08, W
011A 6EE5      02765         MOVWF   POSTDEC1
011C 5000      02766         MOVF    r0x01, W
011E 6EE5      02767         MOVWF   POSTDEC1
0120 5000      02768         MOVF    r0x02, W
0122 6EE5      02769         MOVWF   POSTDEC1
0124 0E00      02770         MOVLW   0x00
0126 6EE5      02771         MOVWF   POSTDEC1
0128 0E00      02772         MOVLW   0x00
012A 6EE5      02773         MOVWF   POSTDEC1
012C 0E03      02774         MOVLW   0x03
012E 6EE5      02775         MOVWF   POSTDEC1
0130 0EE8      02776         MOVLW   0xe8
0132 6EE5      02777         MOVWF   POSTDEC1
0134 EC00 F000 02778         CALL    __mullong
0138 6E00      02779         MOVWF   r0x01
013A CFF3 F000 02780         MOVFF   PRODL, r0x02
013E CFF4 F000 02781         MOVFF   PRODH, r0x08
0142 CFE9 F000 02782         MOVFF   FSR0L, r0x09
0146 0E08      02783         MOVLW   0x08
0148 26E1      02784         ADDWF   FSR1L, F
014A B0D8      02785         BTFSC   STATUS, 0
014C 2AE2      02786         INCF    FSR1H, F
014E 5000      02787         MOVF    r0x01, W
0150 2600      02788         ADDWF   r0x00, F
0152 5000      02789         MOVF    r0x02, W
0154 2200      02790         ADDWFC  r0x05, F
0156 5000      02791         MOVF    r0x08, W
0158 2200      02792         ADDWFC  r0x06, F
015A 5000      02793         MOVF    r0x09, W
015C 2200      02794         ADDWFC  r0x07, F
               02795 ;       .line   365; brtos/BRTOS.c      + ((INT32U)miliseconds    * configTICK_RATE_HZ)/1000L;
015E 6A00      02796         CLRF    r0x01
0160 6A00      02797         CLRF    r0x02
0162 5000      02798         MOVF    r0x02, W
0164 6EE5      02799         MOVWF   POSTDEC1
0166 5000      02800         MOVF    r0x01, W
0168 6EE5      02801         MOVWF   POSTDEC1
016A 5000      02802         MOVF    r0x04, W
016C 6EE5      02803         MOVWF   POSTDEC1
016E 5000      02804         MOVF    r0x03, W
0170 6EE5      02805         MOVWF   POSTDEC1
0172 0E00      02806         MOVLW   0x00
0174 6EE5      02807         MOVWF   POSTDEC1
0176 0E00      02808         MOVLW   0x00
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0178 6EE5      02809         MOVWF   POSTDEC1
017A 0E03      02810         MOVLW   0x03
017C 6EE5      02811         MOVWF   POSTDEC1
017E 0EE8      02812         MOVLW   0xe8
0180 6EE5      02813         MOVWF   POSTDEC1
0182 EC00 F000 02814         CALL    __mullong
0186 6E00      02815         MOVWF   r0x01
0188 CFF3 F000 02816         MOVFF   PRODL, r0x02
018C CFF4 F000 02817         MOVFF   PRODH, r0x03
0190 CFE9 F000 02818         MOVFF   FSR0L, r0x04
0194 0E08      02819         MOVLW   0x08
0196 26E1      02820         ADDWF   FSR1L, F
0198 B0D8      02821         BTFSC   STATUS, 0
019A 2AE2      02822         INCF    FSR1H, F
019C 0E00      02823         MOVLW   0x00
019E 6EE5      02824         MOVWF   POSTDEC1
01A0 0E00      02825         MOVLW   0x00
01A2 6EE5      02826         MOVWF   POSTDEC1
01A4 0E03      02827         MOVLW   0x03
01A6 6EE5      02828         MOVWF   POSTDEC1
01A8 0EE8      02829         MOVLW   0xe8
01AA 6EE5      02830         MOVWF   POSTDEC1
01AC 5000      02831         MOVF    r0x04, W
01AE 6EE5      02832         MOVWF   POSTDEC1
01B0 5000      02833         MOVF    r0x03, W
01B2 6EE5      02834         MOVWF   POSTDEC1
01B4 5000      02835         MOVF    r0x02, W
01B6 6EE5      02836         MOVWF   POSTDEC1
01B8 5000      02837         MOVF    r0x01, W
01BA 6EE5      02838         MOVWF   POSTDEC1
01BC EC00 F000 02839         CALL    __divulong
01C0 6E00      02840         MOVWF   r0x01
01C2 CFF3 F000 02841         MOVFF   PRODL, r0x02
01C6 CFF4 F000 02842         MOVFF   PRODH, r0x03
01CA CFE9 F000 02843         MOVFF   FSR0L, r0x04
01CE 0E08      02844         MOVLW   0x08
01D0 26E1      02845         ADDWF   FSR1L, F
01D2 B0D8      02846         BTFSC   STATUS, 0
01D4 2AE2      02847         INCF    FSR1H, F
01D6 5000      02848         MOVF    r0x01, W
01D8 2400      02849         ADDWF   r0x00, W
01DA 6E00      02850         MOVWF   r0x01
01DC 5000      02851         MOVF    r0x02, W
01DE 2000      02852         ADDWFC  r0x05, W
01E0 6E00      02853         MOVWF   r0x02
01E2 5000      02854         MOVF    r0x03, W
01E4 2000      02855         ADDWFC  r0x06, W
01E6 6E00      02856         MOVWF   r0x03
01E8 5000      02857         MOVF    r0x04, W
01EA 2000      02858         ADDWFC  r0x07, W
01EC 6E00      02859         MOVWF   r0x00
               02860 ;       .line   368; brtos/BRTOS.c      if (ticks > 0)
01EE 5000      02861         MOVF    r0x01, W
01F0 1000      02862         IORWF   r0x02, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01F2 1000      02863         IORWF   r0x03, W
01F4 1000      02864         IORWF   r0x00, W
01F6 B4D8      02865         BTFSC   STATUS, 2
01F8 D000      02866         BRA     _00146_DS_
               02867 ;       .line   370; brtos/BRTOS.c      loops = ticks / 60000L;
01FA 0E00      02868         MOVLW   0x00
01FC 6EE5      02869         MOVWF   POSTDEC1
01FE 0E00      02870         MOVLW   0x00
0200 6EE5      02871         MOVWF   POSTDEC1
0202 0EEA      02872         MOVLW   0xea
0204 6EE5      02873         MOVWF   POSTDEC1
0206 0E60      02874         MOVLW   0x60
0208 6EE5      02875         MOVWF   POSTDEC1
020A 5000      02876         MOVF    r0x00, W
020C 6EE5      02877         MOVWF   POSTDEC1
020E 5000      02878         MOVF    r0x03, W
0210 6EE5      02879         MOVWF   POSTDEC1
0212 5000      02880         MOVF    r0x02, W
0214 6EE5      02881         MOVWF   POSTDEC1
0216 5000      02882         MOVF    r0x01, W
0218 6EE5      02883         MOVWF   POSTDEC1
021A EC00 F000 02884         CALL    __divulong
021E 6E00      02885         MOVWF   r0x04
0220 CFF3 F000 02886         MOVFF   PRODL, r0x05
0224 CFF4 F000 02887         MOVFF   PRODH, r0x06
0228 CFE9 F000 02888         MOVFF   FSR0L, r0x07
022C 0E08      02889         MOVLW   0x08
022E 26E1      02890         ADDWF   FSR1L, F
0230 B0D8      02891         BTFSC   STATUS, 0
0232 2AE2      02892         INCF    FSR1H, F
               02893 ;       .line   371; brtos/BRTOS.c      ticks = ticks % 60000L;
0234 0E00      02894         MOVLW   0x00
0236 6EE5      02895         MOVWF   POSTDEC1
0238 0E00      02896         MOVLW   0x00
023A 6EE5      02897         MOVWF   POSTDEC1
023C 0EEA      02898         MOVLW   0xea
023E 6EE5      02899         MOVWF   POSTDEC1
0240 0E60      02900         MOVLW   0x60
0242 6EE5      02901         MOVWF   POSTDEC1
0244 5000      02902         MOVF    r0x00, W
0246 6EE5      02903         MOVWF   POSTDEC1
0248 5000      02904         MOVF    r0x03, W
024A 6EE5      02905         MOVWF   POSTDEC1
024C 5000      02906         MOVF    r0x02, W
024E 6EE5      02907         MOVWF   POSTDEC1
0250 5000      02908         MOVF    r0x01, W
0252 6EE5      02909         MOVWF   POSTDEC1
0254 EC00 F000 02910         CALL    __modulong
0258 6E00      02911         MOVWF   r0x01
025A CFF3 F000 02912         MOVFF   PRODL, r0x02
025E CFF4 F000 02913         MOVFF   PRODH, r0x03
0262 CFE9 F000 02914         MOVFF   FSR0L, r0x00
0266 0E08      02915         MOVLW   0x08
0268 26E1      02916         ADDWF   FSR1L, F
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
026A B0D8      02917         BTFSC   STATUS, 0
026C 2AE2      02918         INCF    FSR1H, F
               02919 ;       .line   373; brtos/BRTOS.c      (void)DelayTask(ticks);
026E 5000      02920         MOVF    r0x02, W
0270 6EE5      02921         MOVWF   POSTDEC1
0272 5000      02922         MOVF    r0x01, W
0274 6EE5      02923         MOVWF   POSTDEC1
0276 EC00 F000 02924         CALL    _DelayTask
027A 0E02      02925         MOVLW   0x02
027C 26E1      02926         ADDWF   FSR1L, F
027E B0D8      02927         BTFSC   STATUS, 0
0280 2AE2      02928         INCF    FSR1H, F
               02929 ;       .line   375; brtos/BRTOS.c      while(loops > 0)
0282 C000 F000 02930         MOVFF   r0x04, r0x00
0286 C000 F000 02931         MOVFF   r0x05, r0x01
028A C000 F000 02932         MOVFF   r0x06, r0x02
028E C000 F000 02933         MOVFF   r0x07, r0x03
0292 02934 _00142_DS_:
0292 5000      02935         MOVF    r0x00, W
0294 1000      02936         IORWF   r0x01, W
0296 1000      02937         IORWF   r0x02, W
0298 1000      02938         IORWF   r0x03, W
029A E000      02939         BZ      _00144_DS_
               02940 ;       .line   377; brtos/BRTOS.c      (void)DelayTask(60000);
029C 0EEA      02941         MOVLW   0xea
029E 6EE5      02942         MOVWF   POSTDEC1
02A0 0E60      02943         MOVLW   0x60
02A2 6EE5      02944         MOVWF   POSTDEC1
02A4 EC00 F000 02945         CALL    _DelayTask
02A8 0E02      02946         MOVLW   0x02
02AA 26E1      02947         ADDWF   FSR1L, F
02AC B0D8      02948         BTFSC   STATUS, 0
02AE 2AE2      02949         INCF    FSR1H, F
               02950 ;       .line   378; brtos/BRTOS.c      loops--;
02B0 0EFF      02951         MOVLW   0xff
02B2 2600      02952         ADDWF   r0x00, F
02B4 0EFF      02953         MOVLW   0xff
02B6 2200      02954         ADDWFC  r0x01, F
02B8 0EFF      02955         MOVLW   0xff
02BA 2200      02956         ADDWFC  r0x02, F
02BC 0EFF      02957         MOVLW   0xff
02BE 2200      02958         ADDWFC  r0x03, F
02C0 D000      02959         BRA     _00142_DS_
02C2 02960 _00144_DS_:
               02961 ;       .line   380; brtos/BRTOS.c      return OK;
02C2 6AE8      02962         CLRF    WREG
02C4 D000      02963         BRA     _00148_DS_
02C6 02964 _00146_DS_:
               02965 ;       .line   384; brtos/BRTOS.c      return NO_TASK_DELAY;
02C6 0E09      02966         MOVLW   0x09
02C8 02967 _00148_DS_:
02C8 CFE4 F000 02968         MOVFF   PREINC1, r0x0a
02CC CFE4 F000 02969         MOVFF   PREINC1, r0x09
02D0 CFE4 F000 02970         MOVFF   PREINC1, r0x08
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02D4 CFE4 F000 02971         MOVFF   PREINC1, r0x07
02D8 CFE4 F000 02972         MOVFF   PREINC1, r0x06
02DC CFE4 F000 02973         MOVFF   PREINC1, r0x05
02E0 CFE4 F000 02974         MOVFF   PREINC1, r0x04
02E4 CFE4 F000 02975         MOVFF   PREINC1, r0x03
02E8 CFE4 F000 02976         MOVFF   PREINC1, r0x02
02EC CFE4 F000 02977         MOVFF   PREINC1, r0x01
02F0 CFE4 F000 02978         MOVFF   PREINC1, r0x00
02F4 CFE4 FFD9 02979         MOVFF   PREINC1, FSR2L
02F8 CFE4 FFDA 02980         MOVFF   PREINC1, FSR2H
02FC 0012      02981         RETURN  
               02982 
               02983 ; ; Starting pCode block
               02984 S_BRTOS__DelayTask      code
0000 02985 _DelayTask:
               02986 ;       .line   267; brtos/BRTOS.c      INT8U DelayTask(INT16U time_wait)
0000 CFDA FFE5 02987         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 02988         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 02989         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 02990         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 02991         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 02992         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 02993         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 02994         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 02995         MOVFF   r0x04, POSTDEC1
0024 C000 FFE5 02996         MOVFF   r0x05, POSTDEC1
0028 C000 FFE5 02997         MOVFF   r0x06, POSTDEC1
002C C000 FFE5 02998         MOVFF   r0x07, POSTDEC1
0030 C000 FFE5 02999         MOVFF   r0x08, POSTDEC1
0034 C000 FFE5 03000         MOVFF   r0x09, POSTDEC1
0038 C000 FFE5 03001         MOVFF   r0x0a, POSTDEC1
003C C000 FFE5 03002         MOVFF   r0x0b, POSTDEC1
0040 C000 FFE5 03003         MOVFF   r0x0c, POSTDEC1
0044 C000 FFE5 03004         MOVFF   r0x0d, POSTDEC1
0048 0E03      03005         MOVLW   0x03
004A CFDB F000 03006         MOVFF   PLUSW2, r0x00
004E 0E04      03007         MOVLW   0x04
0050 CFDB F000 03008         MOVFF   PLUSW2, r0x01
               03009 ; ;multiply lit val:0x10 by variable _currentTask and store in r0x02
               03010 ; ;Unrolled 8 X 8 multiplication
               03011 ; ;FIXME: the function does not support result==WREG
0054 0000      03012         BANKSEL _currentTask
               03013 ;       .line   271; brtos/BRTOS.c      ContextType *Task = &ContextTask[currentTask];
0056 5100      03014         MOVF    _currentTask, W, B
0058 0D10      03015         MULLW   0x10
005A CFF3 F000 03016         MOVFF   PRODL, r0x02
005E 6A00      03017         CLRF    r0x03
0060 0E00      03018         MOVLW   LOW(_ContextTask)
0062 2600      03019         ADDWF   r0x02, F
0064 0E00      03020         MOVLW   HIGH(_ContextTask)
0066 2200      03021         ADDWFC  r0x03, F
0068 5000      03022         MOVF    r0x03, W
006A 6E00      03023         MOVWF   r0x03
006C 5000      03024         MOVF    r0x02, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 6E00      03025         MOVWF   r0x02
0070 0E80      03026         MOVLW   0x80
0072 6E00      03027         MOVWF   r0x04
0074 0000      03028         BANKSEL _iNesting
               03029 ;       .line   273; brtos/BRTOS.c      if (iNesting > 0) {                                // See if caller is an interrupt
0076 5100      03030         MOVF    _iNesting, W, B
0078 E000      03031         BZ      _00111_DS_
               03032 ;       .line   274; brtos/BRTOS.c      return(IRQ_PEND_ERR);                           // Can't be blocked by interrupt
007A 0E02      03033         MOVLW   0x02
007C D000      03034         BRA     _00124_DS_
007E 03035 _00111_DS_:
007E 0000      03036         BANKSEL _currentTask
               03037 ;       .line   277; brtos/BRTOS.c      if (currentTask)
0080 5100      03038         MOVF    _currentTask, W, B
0082 B4D8      03039         BTFSC   STATUS, 2
0084 D000      03040         BRA     _00122_DS_
               03041 ;       .line   280; brtos/BRTOS.c      if (time_wait > 0)
0086 5000      03042         MOVF    r0x00, W
0088 1000      03043         IORWF   r0x01, W
008A B4D8      03044         BTFSC   STATUS, 2
008C D000      03045         BRA     _00119_DS_
               03046 ;       .line   282; brtos/BRTOS.c      OSEnterCritical();
008E 9E00      03047         BCF     _INTCONbits, 7
               03048 ;       .line   293; brtos/BRTOS.c      timeout = (INT32U)((INT32U)counter + (INT32U)time_wait);
0090 C000 F000 03049         MOVFF   _counter, r0x05
0094 C000 F000 03050         MOVFF   (_counter + 1), r0x06
0098 6A00      03051         CLRF    r0x07
009A 6A00      03052         CLRF    r0x08
009C 6A00      03053         CLRF    r0x09
009E 6A00      03054         CLRF    r0x0a
00A0 5000      03055         MOVF    r0x00, W
00A2 2400      03056         ADDWF   r0x05, W
00A4 6E00      03057         MOVWF   r0x00
00A6 5000      03058         MOVF    r0x01, W
00A8 2000      03059         ADDWFC  r0x06, W
00AA 6E00      03060         MOVWF   r0x01
00AC 5000      03061         MOVF    r0x09, W
00AE 2000      03062         ADDWFC  r0x07, W
00B0 6E00      03063         MOVWF   r0x05
00B2 5000      03064         MOVF    r0x0a, W
00B4 2000      03065         ADDWFC  r0x08, W
00B6 6E00      03066         MOVWF   r0x06
               03067 ;       .line   295; brtos/BRTOS.c      if (timeout >= TickCountOverFlow)
00B8 0E00      03068         MOVLW   0x00
00BA 5C00      03069         SUBWF   r0x06, W
00BC E100      03070         BNZ     _00131_DS_
00BE 0E00      03071         MOVLW   0x00
00C0 5C00      03072         SUBWF   r0x05, W
00C2 E100      03073         BNZ     _00131_DS_
00C4 0EFA      03074         MOVLW   0xfa
00C6 5C00      03075         SUBWF   r0x01, W
00C8 E100      03076         BNZ     _00131_DS_
00CA 0E00      03077         MOVLW   0x00
00CC 5C00      03078         SUBWF   r0x00, W
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CE 03079 _00131_DS_:
00CE E300      03080         BNC     _00113_DS_
               03081 ;       .line   297; brtos/BRTOS.c      Task->TimeToWait = (INT16U)(timeout - TickCountOverFlow);
00D0 5000      03082         MOVF    r0x02, W
00D2 0F07      03083         ADDLW   0x07
00D4 6E00      03084         MOVWF   r0x07
00D6 0E00      03085         MOVLW   0x00
00D8 2000      03086         ADDWFC  r0x03, W
00DA 6E00      03087         MOVWF   r0x08
00DC 0E00      03088         MOVLW   0x00
00DE 2000      03089         ADDWFC  r0x04, W
00E0 6E00      03090         MOVWF   r0x09
00E2 5000      03091         MOVF    r0x00, W
00E4 6E00      03092         MOVWF   r0x0a
00E6 0E06      03093         MOVLW   0x06
00E8 2400      03094         ADDWF   r0x01, W
00EA 6E00      03095         MOVWF   r0x0b
00EC 0EFF      03096         MOVLW   0xff
00EE 2000      03097         ADDWFC  r0x05, W
00F0 6E00      03098         MOVWF   r0x0c
00F2 0EFF      03099         MOVLW   0xff
00F4 2000      03100         ADDWFC  r0x06, W
00F6 6E00      03101         MOVWF   r0x0d
00F8 C000 FFE5 03102         MOVFF   r0x0a, POSTDEC1
00FC C000 FFF4 03103         MOVFF   r0x0b, PRODH
0100 C000 FFE9 03104         MOVFF   r0x07, FSR0L
0104 C000 FFF3 03105         MOVFF   r0x08, PRODL
0108 5000      03106         MOVF    r0x09, W
010A EC00 F000 03107         CALL    __gptrput2
010E D000      03108         BRA     _00114_DS_
0110 03109 _00113_DS_:
               03110 ;       .line   301; brtos/BRTOS.c      Task->TimeToWait = (INT16U)timeout;
0110 5000      03111         MOVF    r0x02, W
0112 0F07      03112         ADDLW   0x07
0114 6E00      03113         MOVWF   r0x07
0116 0E00      03114         MOVLW   0x00
0118 2000      03115         ADDWFC  r0x03, W
011A 6E00      03116         MOVWF   r0x08
011C 0E00      03117         MOVLW   0x00
011E 2000      03118         ADDWFC  r0x04, W
0120 6E00      03119         MOVWF   r0x09
0122 C000 FFE5 03120         MOVFF   r0x00, POSTDEC1
0126 C000 FFF4 03121         MOVFF   r0x01, PRODH
012A C000 FFE9 03122         MOVFF   r0x07, FSR0L
012E C000 FFF3 03123         MOVFF   r0x08, PRODL
0132 5000      03124         MOVF    r0x09, W
0134 EC00 F000 03125         CALL    __gptrput2
0138 03126 _00114_DS_:
0138 0000      03127         BANKSEL _Tail
               03128 ;       .line   305; brtos/BRTOS.c      IncludeTaskIntoDelayList();
013A 5100      03129         MOVF    _Tail, W, B
013C 0000      03130         BANKSEL (_Tail + 1)
013E 1100      03131         IORWF   (_Tail + 1), W, B
0140 0000      03132         BANKSEL (_Tail + 2)
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0142 1100      03133         IORWF   (_Tail + 2), W, B
0144 B4D8      03134         BTFSC   STATUS, 2
0146 D000      03135         BRA     _00116_DS_
0148 C000 F000 03136         MOVFF   _Tail, r0x00
014C C000 F000 03137         MOVFF   (_Tail + 1), r0x01
0150 C000 F000 03138         MOVFF   (_Tail + 2), r0x05
0154 0E0A      03139         MOVLW   0x0a
0156 2600      03140         ADDWF   r0x00, F
0158 0E00      03141         MOVLW   0x00
015A 2200      03142         ADDWFC  r0x01, F
015C 0E00      03143         MOVLW   0x00
015E 2200      03144         ADDWFC  r0x05, F
0160 C000 FFE5 03145         MOVFF   r0x02, POSTDEC1
0164 C000 FFF4 03146         MOVFF   r0x03, PRODH
0168 C000 FFF6 03147         MOVFF   r0x04, TBLPTRL
016C C000 FFE9 03148         MOVFF   r0x00, FSR0L
0170 C000 FFF3 03149         MOVFF   r0x01, PRODL
0174 5000      03150         MOVF    r0x05, W
0176 EC00 F000 03151         CALL    __gptrput3
017A 5000      03152         MOVF    r0x02, W
017C 0F0D      03153         ADDLW   0x0d
017E 6E00      03154         MOVWF   r0x00
0180 0E00      03155         MOVLW   0x00
0182 2000      03156         ADDWFC  r0x03, W
0184 6E00      03157         MOVWF   r0x01
0186 0E00      03158         MOVLW   0x00
0188 2000      03159         ADDWFC  r0x04, W
018A 6E00      03160         MOVWF   r0x05
018C C000 FFE5 03161         MOVFF   _Tail, POSTDEC1
0190 C000 FFF4 03162         MOVFF   (_Tail + 1), PRODH
0194 C000 FFF6 03163         MOVFF   (_Tail + 2), TBLPTRL
0198 C000 FFE9 03164         MOVFF   r0x00, FSR0L
019C C000 FFF3 03165         MOVFF   r0x01, PRODL
01A0 5000      03166         MOVF    r0x05, W
01A2 EC00 F000 03167         CALL    __gptrput3
01A6 C000 F000 03168         MOVFF   r0x02, _Tail
01AA C000 F000 03169         MOVFF   r0x03, (_Tail + 1)
01AE C000 F000 03170         MOVFF   r0x04, (_Tail + 2)
01B2 C000 F000 03171         MOVFF   _Tail, r0x00
01B6 C000 F000 03172         MOVFF   (_Tail + 1), r0x01
01BA C000 F000 03173         MOVFF   (_Tail + 2), r0x05
01BE 0E0A      03174         MOVLW   0x0a
01C0 2600      03175         ADDWF   r0x00, F
01C2 0E00      03176         MOVLW   0x00
01C4 2200      03177         ADDWFC  r0x01, F
01C6 0E00      03178         MOVLW   0x00
01C8 2200      03179         ADDWFC  r0x05, F
01CA 0E00      03180         MOVLW   0x00
01CC 6EE5      03181         MOVWF   POSTDEC1
01CE 0E00      03182         MOVLW   0x00
01D0 6EF4      03183         MOVWF   PRODH
01D2 0E00      03184         MOVLW   0x00
01D4 6EF6      03185         MOVWF   TBLPTRL
01D6 C000 FFE9 03186         MOVFF   r0x00, FSR0L
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01DA C000 FFF3 03187         MOVFF   r0x01, PRODL
01DE 5000      03188         MOVF    r0x05, W
01E0 EC00 F000 03189         CALL    __gptrput3
01E4 D000      03190         BRA     _00117_DS_
01E6 03191 _00116_DS_:
01E6 C000 F000 03192         MOVFF   r0x02, _Tail
01EA C000 F000 03193         MOVFF   r0x03, (_Tail + 1)
01EE C000 F000 03194         MOVFF   r0x04, (_Tail + 2)
01F2 C000 F000 03195         MOVFF   r0x02, _Head
01F6 C000 F000 03196         MOVFF   r0x03, (_Head + 1)
01FA C000 F000 03197         MOVFF   r0x04, (_Head + 2)
01FE 5000      03198         MOVF    r0x02, W
0200 0F0A      03199         ADDLW   0x0a
0202 6E00      03200         MOVWF   r0x00
0204 0E00      03201         MOVLW   0x00
0206 2000      03202         ADDWFC  r0x03, W
0208 6E00      03203         MOVWF   r0x01
020A 0E00      03204         MOVLW   0x00
020C 2000      03205         ADDWFC  r0x04, W
020E 6E00      03206         MOVWF   r0x05
0210 0E00      03207         MOVLW   0x00
0212 6EE5      03208         MOVWF   POSTDEC1
0214 0E00      03209         MOVLW   0x00
0216 6EF4      03210         MOVWF   PRODH
0218 0E00      03211         MOVLW   0x00
021A 6EF6      03212         MOVWF   TBLPTRL
021C C000 FFE9 03213         MOVFF   r0x00, FSR0L
0220 C000 FFF3 03214         MOVFF   r0x01, PRODL
0224 5000      03215         MOVF    r0x05, W
0226 EC00 F000 03216         CALL    __gptrput3
022A 5000      03217         MOVF    r0x02, W
022C 0F0D      03218         ADDLW   0x0d
022E 6E00      03219         MOVWF   r0x00
0230 0E00      03220         MOVLW   0x00
0232 2000      03221         ADDWFC  r0x03, W
0234 6E00      03222         MOVWF   r0x01
0236 0E00      03223         MOVLW   0x00
0238 2000      03224         ADDWFC  r0x04, W
023A 6E00      03225         MOVWF   r0x05
023C 0E00      03226         MOVLW   0x00
023E 6EE5      03227         MOVWF   POSTDEC1
0240 0E00      03228         MOVLW   0x00
0242 6EF4      03229         MOVWF   PRODH
0244 0E00      03230         MOVLW   0x00
0246 6EF6      03231         MOVWF   TBLPTRL
0248 C000 FFE9 03232         MOVFF   r0x00, FSR0L
024C C000 FFF3 03233         MOVFF   r0x01, PRODL
0250 5000      03234         MOVF    r0x05, W
0252 EC00 F000 03235         CALL    __gptrput3
0256 03236 _00117_DS_:
               03237 ;       .line   312; brtos/BRTOS.c      OSReadyList = OSReadyList & ~(PriorityMask[Task->Priority]);
0256 0E09      03238         MOVLW   0x09
0258 2600      03239         ADDWF   r0x02, F
025A 0E00      03240         MOVLW   0x00
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
025C 2200      03241         ADDWFC  r0x03, F
025E 0E00      03242         MOVLW   0x00
0260 2200      03243         ADDWFC  r0x04, F
0262 C000 FFE9 03244         MOVFF   r0x02, FSR0L
0266 C000 FFF3 03245         MOVFF   r0x03, PRODL
026A 5000      03246         MOVF    r0x04, W
026C EC00 F000 03247         CALL    __gptrget1
0270 6E00      03248         MOVWF   r0x02
               03249 ; ;multiply lit val:0x02 by variable r0x02 and store in r0x02
               03250 ; ;Unrolled 8 X 8 multiplication
               03251 ; ;FIXME: the function does not support result==WREG
0272 90D8      03252         BCF     STATUS, 0
0274 3600      03253         RLCF    r0x02, F
0276 6A00      03254         CLRF    r0x00
0278 6A00      03255         CLRF    r0x01
027A 0E00      03256         MOVLW   LOW(_PriorityMask)
027C 2600      03257         ADDWF   r0x02, F
027E 0E00      03258         MOVLW   HIGH(_PriorityMask)
0280 2200      03259         ADDWFC  r0x00, F
0282 0E00      03260         MOVLW   UPPER(_PriorityMask)
0284 2200      03261         ADDWFC  r0x01, F
0286 C000 FFF6 03262         MOVFF   r0x02, TBLPTRL
028A C000 FFF7 03263         MOVFF   r0x00, TBLPTRH
028E C000 FFF8 03264         MOVFF   r0x01, TBLPTRU
0292 0009      03265         TBLRD*+ 
0294 CFF5 F000 03266         MOVFF   TABLAT, r0x02
0298 0009      03267         TBLRD*+ 
029A CFF5 F000 03268         MOVFF   TABLAT, r0x00
029E 1E00      03269         COMF    r0x02, F
02A0 1E00      03270         COMF    r0x00, F
02A2 5000      03271         MOVF    r0x02, W
02A4 0000      03272         BANKSEL _OSReadyList
02A6 1700      03273         ANDWF   _OSReadyList, F, B
02A8 5000      03274         MOVF    r0x00, W
02AA 0000      03275         BANKSEL (_OSReadyList + 1)
02AC 1700      03276         ANDWF   (_OSReadyList + 1), F, B
               03277 ;       .line   316; brtos/BRTOS.c      ChangeContext();
02AE EC00 F000 03278         CALL    _SwitchContext
               03279 ;       .line   318; brtos/BRTOS.c      OSExitCritical();
02B2 8E00      03280         BSF     _INTCONbits, 7
               03281 ;       .line   320; brtos/BRTOS.c      return OK;
02B4 6AE8      03282         CLRF    WREG
02B6 D000      03283         BRA     _00124_DS_
02B8 03284 _00119_DS_:
               03285 ;       .line   324; brtos/BRTOS.c      return NO_TASK_DELAY;
02B8 0E09      03286         MOVLW   0x09
02BA D000      03287         BRA     _00124_DS_
02BC 03288 _00122_DS_:
               03289 ;       .line   329; brtos/BRTOS.c      return NOT_VALID_TASK;
02BC 0E08      03290         MOVLW   0x08
02BE 03291 _00124_DS_:
02BE CFE4 F000 03292         MOVFF   PREINC1, r0x0d
02C2 CFE4 F000 03293         MOVFF   PREINC1, r0x0c
02C6 CFE4 F000 03294         MOVFF   PREINC1, r0x0b
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02CA CFE4 F000 03295         MOVFF   PREINC1, r0x0a
02CE CFE4 F000 03296         MOVFF   PREINC1, r0x09
02D2 CFE4 F000 03297         MOVFF   PREINC1, r0x08
02D6 CFE4 F000 03298         MOVFF   PREINC1, r0x07
02DA CFE4 F000 03299         MOVFF   PREINC1, r0x06
02DE CFE4 F000 03300         MOVFF   PREINC1, r0x05
02E2 CFE4 F000 03301         MOVFF   PREINC1, r0x04
02E6 CFE4 F000 03302         MOVFF   PREINC1, r0x03
02EA CFE4 F000 03303         MOVFF   PREINC1, r0x02
02EE CFE4 F000 03304         MOVFF   PREINC1, r0x01
02F2 CFE4 F000 03305         MOVFF   PREINC1, r0x00
02F6 CFE4 FFD9 03306         MOVFF   PREINC1, FSR2L
02FA CFE4 FFDA 03307         MOVFF   PREINC1, FSR2H
02FE 0012      03308         RETURN  
               03309 
               03310 ; ; Starting pCode block
               03311 S_BRTOS__OSSchedule     code
0000 03312 _OSSchedule:
               03313 ;       .line   241; brtos/BRTOS.c      INT8U OSSchedule(void)
0000 CFDA FFE5 03314         MOVFF   FSR2H, POSTDEC1
0004 CFD9 FFE5 03315         MOVFF   FSR2L, POSTDEC1
0008 CFE2 FFDA 03316         MOVFF   FSR1H, FSR2H
000C CFE1 FFD9 03317         MOVFF   FSR1L, FSR2L
0010 C000 FFE5 03318         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 03319         MOVFF   r0x01, POSTDEC1
0018 0000      03320         BANKSEL _OSBlockedList
               03321 ;       .line   246; brtos/BRTOS.c      Priority = SAScheduler(OSReadyList & OSBlockedList);
001A 5100      03322         MOVF    _OSBlockedList, W, B
001C 0000      03323         BANKSEL _OSReadyList
001E 1500      03324         ANDWF   _OSReadyList, W, B
0020 6E00      03325         MOVWF   r0x00
0022 0000      03326         BANKSEL (_OSBlockedList + 1)
0024 5100      03327         MOVF    (_OSBlockedList + 1), W, B
0026 0000      03328         BANKSEL (_OSReadyList + 1)
0028 1500      03329         ANDWF   (_OSReadyList + 1), W, B
002A 6E00      03330         MOVWF   r0x01
002C 5000      03331         MOVF    r0x01, W
002E 6EE5      03332         MOVWF   POSTDEC1
0030 5000      03333         MOVF    r0x00, W
0032 6EE5      03334         MOVWF   POSTDEC1
0034 EC00 F000 03335         CALL    _SAScheduler
0038 6E00      03336         MOVWF   r0x00
003A 0E02      03337         MOVLW   0x02
003C 26E1      03338         ADDWF   FSR1L, F
003E B0D8      03339         BTFSC   STATUS, 0
0040 2AE2      03340         INCF    FSR1H, F
               03341 ;       .line   247; brtos/BRTOS.c      TaskSelect = PriorityVector[Priority];
0042 6A00      03342         CLRF    r0x01
0044 0E00      03343         MOVLW   LOW(_PriorityVector)
0046 2600      03344         ADDWF   r0x00, F
0048 0E00      03345         MOVLW   HIGH(_PriorityVector)
004A 2200      03346         ADDWFC  r0x01, F
004C C000 FFE9 03347         MOVFF   r0x00, FSR0L
0050 C000 FFEA 03348         MOVFF   r0x01, FSR0H
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 CFEF F000 03349         MOVFF   INDF0, r0x00
               03350 ;       .line   249; brtos/BRTOS.c      return TaskSelect;
0058 5000      03351         MOVF    r0x00, W
005A CFE4 F000 03352         MOVFF   PREINC1, r0x01
005E CFE4 F000 03353         MOVFF   PREINC1, r0x00
0062 CFE4 FFD9 03354         MOVFF   PREINC1, FSR2L
0066 CFE4 FFDA 03355         MOVFF   PREINC1, FSR2H
006A 0012      03356         RETURN  
               03357 
               03358 ; ; Starting pCode block for Ival
               03359         code
0000 03360 _PriorityMask:
0000 0001 0002 03361         DB      0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00
     0004 0008 
     0010 0020 
000C 0040 0080 03362         DB      0x40, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08
     0100 0200 
     0400 0800 
0018 1000 2000 03363         DB      0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x80
     4000 8000 
               03364 ; ; Starting pCode block
0020 03365 __str_0:
0020 5242 4F54 03366         DB      0x42, 0x52, 0x54, 0x4f, 0x53, 0x20, 0x56, 0x65, 0x72, 0x2e, 0x20, 0x31
     2053 6556 
     2E72 3120 
002C 362E 0034 03367         DB      0x2e, 0x36, 0x34, 0x00
               03368 
               03369 
               03370 ; Statistics:
               03371 ; code size:     6216 (0x1848) bytes ( 4.74%)
               03372 ;                3108 (0x0c24) words
               03373 ; udata size:     509 (0x01fd) bytes (39.77%)
               03374 ; access size:     22 (0x0016) bytes
               03375 
               03376 
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2H                             00000FDA
FSR2L                             00000FD9
INDF0                             00000FEF
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
WREG                              00000FE8
_00111_DS_                        0000007E
_00113_DS_                        00000110
_00114_DS_                        00000138
_00116_DS_                        000001E6
_00117_DS_                        00000256
_00119_DS_                        000002B8
_00122_DS_                        000002BC
_00124_DS_                        000002BE
_00131_DS_                        000000CE
_00137_DS_                        00000064
_00139_DS_                        0000006E
_00141_DS_                        0000007E
_00142_DS_                        00000292
_00144_DS_                        000002C2
_00146_DS_                        000002C6
_00148_DS_                        000002C8
_00159_DS_                        00000078
_00165_DS_                        0000014C
_00168_DS_                        00000226
_00171_DS_                        000001AC
_00174_DS_                        000002CC
_00175_DS_                        0000004C
_00177_DS_                        000002F8
_00179_DS_                        0000037C
_00180_DS_                        000003A6
_00190_DS_                        0000008C
_00191_DS_                        0000008E
_00193_DS_                        00000116
_00194_DS_                        00000118
_00195_DS_                        00000130
_00196_DS_                        00000132
_00197_DS_                        000001C4
_00198_DS_                        000001C6
_00199_DS_                        00000306
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00205_DS_                        00000042
_00206_DS_                        00000088
_00208_DS_                        0000009E
_00209_DS_                        000000E2
_00219_DS_                        00000046
_00222_DS_                        00000068
_00234_DS_                        00000030
_00236_DS_                        00000038
_00238_DS_                        00000098
_00240_DS_                        000000A0
_00241_DS_                        000000A2
_00255_DS_                        0000002A
_00259_DS_                        00000072
_00261_DS_                        0000007A
_00268_DS_                        00000030
_00270_DS_                        00000038
_00272_DS_                        000000A6
_00274_DS_                        000000AE
_00275_DS_                        000000B0
_00289_DS_                        0000002A
_00293_DS_                        00000098
_00295_DS_                        000000A0
_00302_DS_                        0000003E
_00304_DS_                        00000046
_00308_DS_                        000000D0
_00309_DS_                        00000056
_00311_DS_                        000000C0
_00312_DS_                        000000C8
_00313_DS_                        000000D2
_00330_DS_                        0000003E
_00332_DS_                        00000046
_00336_DS_                        000000CC
_00337_DS_                        00000056
_00339_DS_                        000000BC
_00340_DS_                        000000C4
_00341_DS_                        000000CE
_00358_DS_                        00000020
_00366_DS_                        000000A8
_00368_DS_                        000000BC
_00370_DS_                        000000C0
_00372_DS_                        000000E4
_00374_DS_                        000000E8
_00376_DS_                        000000FA
_00378_DS_                        000000FE
_00380_DS_                        00000124
_00384_DS_                        00000130
_00386_DS_                        00000128
_00387_DS_                        00000134
_00390_DS_                        0000013C
_00392_DS_                        000001B0
_00393_DS_                        000001B8
_00395_DS_                        00000372
_00396_DS_                        00000374
_00413_DS_                        000000B2
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00414_DS_                        000000DA
_00417_DS_                        0000011C
_00419_DS_                        00000168
_00420_DS_                        0000015C
_00426_DS_                        00000052
_00428_DS_                        00000066
_00430_DS_                        0000006A
_00432_DS_                        0000008E
_00434_DS_                        00000092
_00436_DS_                        00000118
_00437_DS_                        0000011A
_00445_DS_                        0000005C
_00446_DS_                        00000084
_00458_DS_                        00000024
_00461_DS_                        00000052
_00464_DS_                        00000080
_00471_DS_                        00000060
_00474_DS_                        00000078
_00477_DS_                        00000066
_00480_DS_                        0000009C
_00483_DS_                        000000B4
_00486_DS_                        000000A2
_00489_DS_                        0000007E
_00492_DS_                        000000E4
_00495_DS_                        000000FC
_00498_DS_                        000000EA
_00501_DS_                        00000120
_00504_DS_                        00000138
_00507_DS_                        00000126
_00510_DS_                        00000102
_00513_DS_                        000000BA
_00514_DS_                        0000013A
_00532_DS_                        00000032
_00533_DS_                        00000040
_00534_DS_                        0000004C
_00535_DS_                        00000058
_00536_DS_                        00000070
_00537_DS_                        00000088
_00538_DS_                        00000094
_00539_DS_                        000000AC
_00540_DS_                        000000C4
_00541_DS_                        000000D0
_00542_DS_                        000000DC
_00543_DS_                        000000F4
_00544_DS_                        0000010C
_00545_DS_                        00000118
_00546_DS_                        00000130
_10470_DS_                        000003A6
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTLbits                      00000000
_BRTOSStart                       00000000
_BRTOS_Init                       00000000
_BRTOS_Mutex_Table                00000000
_BRTOS_Queue_Table                00000000
_BRTOS_Sem_Table                  00000000
_BSR                              00000000
_BlockMultipleTask                00000000
_BlockPriority                    00000000
_BlockTask                        00000000
_BufferText                       00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_ContextTask                      00000000
_CreateVirtualStack               00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_Data                             00000000
_DelayTask                        00000000
_DelayTaskHMSM                    00000000
_DutyCnt                          00000017
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_Head                             00000000
_Hora                             00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_Idle                             00000000
_InstallIdle                      00000000
_InstallTask                      00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LVDCON                           00000000
_LVDCONbits                       00000000
_LastOSDuty                       00000015
_NumberOfInstalledTasks           00000000
_OSBlockedList                    0000000B
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_OSDuty                           0000000D
_OSDutyTmp                        00000011
_OSReadyList                      00000009
_OSSchedule                       00000000
_OS_TICK_HANDLER                  00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PWM1CON                          00000000
_PWM1CONbits                      00000000
_PreInstallTasks                  00000000
_PriorityMask                     00000000
_PriorityVector                   00000000
_QUEUE_STACK                      00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SAScheduler                      00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPvalue                          00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STACK                            00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_SelectedTask                     00000000
_StackAddress                     00000007
_SwitchContext                    00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_Tail                             00000000
_TaskAlloc                        00000019
_TickTimerSetup                   00000000
_UnBlockMultipleTask              00000000
_UnBlockPriority                  00000000
_UnBlockTask                      00000000
gpasm-0.13.7 beta               build/default/production/brtos/BRTOS.asm7-19-2011  15:07:13          PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F4520                         00000001
__divulong                        00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrget3                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__gptrput3                        00000000
__modulong                        00000000
__mullong                         00000000
__str_0                           00000020
_counter                          00000000
_currentTask                      00000000
_iNesting                         0000001D
_iQueueAddress                    00000005
_iStackAddress                    00000003
_initEvents                       00000000
_version                          00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

